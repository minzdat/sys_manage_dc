{"version":3,"file":"static/js/503.49f2707d.chunk.js","mappings":"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","sources":["Services/cloudinaryService.ts","Components/AddRequest/MenuAdd/menuAdd.tsx","Components/AddRequest/SendApprover/sendApprover.tsx","Components/AddRequest/AddRequest/addRequest.tsx"],"sourcesContent":["// src/Services/cloudinaryService.ts\r\n\r\nexport const CLOUD_NAME = 'dmplej3ht'; // Thay bằng cloudName của bạn\r\nexport const UPLOAD_PRESET = 'petapp_unsigned'; // Thay bằng upload preset bạn đã tạo trên Cloudinary\r\n\r\n/**\r\n * Upload 1 file lên Cloudinary\r\n * @param file File cần upload\r\n * @returns URL ảnh sau upload hoặc null nếu lỗi\r\n */\r\nexport const uploadImageToCloudinary = async (file: File): Promise<string | null> => {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('upload_preset', UPLOAD_PRESET);\r\n\r\n    const response = await fetch(`https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (data.secure_url) {\r\n      return data.secure_url;\r\n    } else {\r\n      console.error('Cloudinary upload failed:', data);\r\n      return null;\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error uploading to Cloudinary:', error);\r\n    return null;\r\n  }\r\n};\r\n","import React, { JSX } from 'react'; // thêm useState\r\nimport { Menu, message } from 'antd';\r\nimport { ArrowLeftOutlined, SendOutlined } from '@ant-design/icons';\r\nimport './menuAdd.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { collection, addDoc } from 'firebase/firestore';\r\nimport { db } from \"../../../Firebase/FirebaseConfig\"; // đã có sẵn db\r\nimport { FormData } from '../AddRequest/addRequest';\r\nimport dayjs from 'dayjs';\r\nimport { uploadImageToCloudinary } from '../../../Services/cloudinaryService';\r\nimport { RcFile } from 'antd/es/upload';\r\n\r\ninterface MenuAddProps {\r\n    formData: FormData;\r\n    setFormData: React.Dispatch<React.SetStateAction<FormData>>;\r\n    fileList: RcFile[];\r\n    setFileList: React.Dispatch<React.SetStateAction<RcFile[]>>;\r\n    setLoading: React.Dispatch<React.SetStateAction<boolean>>; \r\n    listOfUserId: string[]; \r\n}\r\n\r\nfunction MenuAdd({ formData, setFormData, fileList, setFileList, setLoading, listOfUserId}: MenuAddProps): JSX.Element {\r\n    const navigate = useNavigate();\r\n\r\n    const handleReturn = () => {\r\n        navigate(\"/\");\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        const createdAt = dayjs().format('YYYY-MM-DDTHH:mm:ss');\r\n        const userEmail = localStorage.getItem('email') || '';\r\n        setLoading(true);\r\n    \r\n        try {\r\n            if (formData.notificationType === 'violation') {\r\n                const {\r\n                    petId,\r\n                    violationLocation,\r\n                    violationTime,\r\n                    description,\r\n                    notes,\r\n                    ownerId\r\n                } = formData;\r\n    \r\n                if (!petId || !violationLocation || !violationTime || !description || !ownerId) {\r\n                    message.error(\"Vui lòng điền đầy đủ các trường bắt buộc cho vi phạm!\");\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n    \r\n                const uploadedUrls = fileList.length > 0\r\n                    ? await Promise.all(fileList.map(uploadImageToCloudinary))\r\n                    : [];\r\n    \r\n                const violationData = {\r\n                    petId,\r\n                    ownerId,\r\n                    violationLocation,\r\n                    violationTime,\r\n                    description,\r\n                    notes: notes || \"\",\r\n                    createdAt,\r\n                    status: 'Pending',\r\n                    notificationBy: userEmail,\r\n                    attachments: uploadedUrls,\r\n                };\r\n    \r\n                await addDoc(collection(db, 'violations'), violationData);\r\n                message.success(\"Gửi thông báo vi phạm thành công!\");\r\n                navigate(\"/\");\r\n            }\r\n    \r\n            else if (formData.notificationType === 'vaccination') {\r\n                const {\r\n                    vaccineType,\r\n                    vaccineLocation,\r\n                    cost,\r\n                    vaccineFrom,\r\n                    vaccineTo,\r\n                    notes,\r\n                    issuingAuthority\r\n                } = formData;\r\n    \r\n                if (!vaccineType || !vaccineLocation || !cost || !vaccineFrom || !vaccineTo || !issuingAuthority) {\r\n                    message.error(\"Vui lòng điền đầy đủ các trường bắt buộc cho tiêm phòng!\");\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n    \r\n                const vaccinationData = {\r\n                    createdAt,\r\n                    vaccineType,\r\n                    vaccineLocation,\r\n                    cost,\r\n                    timeFrom: vaccineFrom,\r\n                    timeTo: vaccineTo,\r\n                    notes: notes || \"\",\r\n                    issuingAuthority,\r\n                    // status: 'Pending',\r\n                    notificationBy: userEmail,\r\n                    senderTo: listOfUserId.map(userId => ({ \r\n                        userId, \r\n                        status: 'Pending'\r\n                    })),\r\n                };\r\n    \r\n                await addDoc(collection(db, 'vaccinations'), vaccinationData);\r\n                message.success(\"Gửi thông báo tiêm phòng thành công!\");\r\n                navigate(\"/\");\r\n            }\r\n    \r\n            else {\r\n                message.error(\"Loại thông báo không hợp lệ!\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Lỗi khi gửi yêu cầu:\", error);\r\n            message.error(\"Gửi yêu cầu thất bại!\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };    \r\n\r\n    return (\r\n        <div className='menu-detail-request'>\r\n            <Menu mode=\"horizontal\" className='fixed-menu'>\r\n                <Menu.Item onClick={handleReturn} key=\"return\" icon={<ArrowLeftOutlined />}>\r\n                    Quay lại\r\n                </Menu.Item>\r\n                <Menu.Item onClick={handleSubmit} key=\"submit\" icon={<SendOutlined />}>\r\n                    Gửi yêu cầu\r\n                </Menu.Item>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MenuAdd;\r\n","import { JSX, useEffect, useState } from 'react';\r\nimport { DeleteOutlined, DragOutlined, EditOutlined, SaveOutlined } from '@ant-design/icons';\r\nimport { Form, Select, Button, Row, Col, Input, Space, notification } from 'antd';\r\nimport './sendApprover.css';\r\nimport { RcFile } from 'antd/es/upload';\r\nimport { NotificationPlacement } from 'antd/es/notification/interface';\r\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\r\n\r\ninterface DepartmentMember {\r\n    OwnerId: string;\r\n    FullName: string;\r\n    Email: string;\r\n    PetId: string;\r\n    PetName: string;\r\n}\r\n\r\ninterface PropsDataList {\r\n    fileList: RcFile[];\r\n    setFileList: React.Dispatch<React.SetStateAction<RcFile[]>>;\r\n    applyNote: boolean;\r\n    setApplyNote: React.Dispatch<React.SetStateAction<boolean>>;\r\n    listOfUserId: string[];\r\n    setListOfUserId: React.Dispatch<React.SetStateAction<string[]>>;\r\n    departmentId: string;\r\n}\r\n\r\nfunction SendApprover({ fileList, setFileList, applyNote, setApplyNote, listOfUserId, setListOfUserId, departmentId }: PropsDataList): JSX.Element {\r\n\r\n    const [dataDepartmentMember, setDataDepartmentMember] = useState<DepartmentMember[]>([]);\r\n    const [inputs, setInputs] = useState<string[]>([]);\r\n    const [editingIndex, setEditingIndex] = useState(-1);\r\n    const [counterApprover, setCounterApprover] = useState(1);\r\n    const [labelApprovers, setLabelApprovers] = useState<string[]>([]);\r\n    const [searchValue, setSearchValue] = useState<string>('');\r\n    const [initialValueApprover, setInitialValueApprover] = useState<string[]>([]);\r\n\r\n    const { Option } = Select;\r\n\r\n    const handleAddInput = () => {\r\n        setInputs([...inputs, '' + counterApprover]);\r\n        setLabelApprovers([...labelApprovers, \"Người nhận \" + counterApprover]);\r\n        setCounterApprover(counterApprover + 1);\r\n    };\r\n\r\n    const handleDelete = (index: number) => {\r\n        const newInputs = [...inputs];\r\n        newInputs.splice(index, 1);\r\n        setInputs(newInputs);\r\n\r\n        const newListOfUser = [...listOfUserId];\r\n        newListOfUser.splice(index, 1);\r\n        setListOfUserId(newListOfUser);\r\n\r\n        const newInitiValueApprover = [...initialValueApprover];\r\n        newInitiValueApprover.splice(index, 1);\r\n        setInitialValueApprover(newInitiValueApprover);\r\n    };\r\n\r\n    const handleInputChangeApprover = (index: number, value: string) => {\r\n        const newApprovers = [...labelApprovers];\r\n        newApprovers[index] = value;\r\n        setLabelApprovers(newApprovers);\r\n    };\r\n\r\n    const handleSave = (index: number) => {\r\n        setEditingIndex(-1);\r\n    };\r\n\r\n    const handleEdit = (index: number) => {\r\n        setEditingIndex(index);\r\n    };\r\n\r\n    const handleSelectChange = (index: number, e: any) => {\r\n        const value = e.value;\r\n        if (listOfUserId.includes(value)) {\r\n            openNotification('topRight');\r\n            return;\r\n        }\r\n\r\n        const newListOfUser = [...listOfUserId];\r\n        newListOfUser[index] = value;\r\n        setListOfUserId(newListOfUser);\r\n\r\n        const selected = dataDepartmentMember.find(d => `${d.OwnerId}|${d.PetId}` === value);\r\n        if (selected) {\r\n            const label = `${selected.FullName} - ${selected.Email} - ${selected.PetName} (${selected.PetId})`;\r\n            const newInitialValues = [...initialValueApprover];\r\n            newInitialValues[index] = label;\r\n            setInitialValueApprover(newInitialValues);\r\n        }\r\n    };\r\n\r\n    const openNotification = (placement: NotificationPlacement) => {\r\n        notification.info({\r\n            message: <strong>Approver already exists</strong>,\r\n            description: 'Cặp chủ nuôi - vật nuôi này đã được chọn, vui lòng chọn cặp khác.',\r\n            placement,\r\n        });\r\n    };\r\n\r\n    const handleSearch = (inputValue: string) => {\r\n        setSearchValue(inputValue);\r\n    };\r\n\r\n    const filteredData = () => {\r\n        return dataDepartmentMember.filter(\r\n            (pair) => !listOfUserId.includes(`${pair.OwnerId}|${pair.PetId}`) && (\r\n                pair.FullName.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n                pair.Email.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n                pair.PetId.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n                pair.PetName.toLowerCase().includes(searchValue.toLowerCase())\r\n            )\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = getFirestore();\r\n            const ownersSnap = await getDocs(collection(db, 'owners'));\r\n            const petsSnap = await getDocs(collection(db, 'pets'));\r\n\r\n            const ownersMap = new Map<string, { fullName: string; email: string }>();\r\n            ownersSnap.forEach(doc => {\r\n                const data = doc.data();\r\n                ownersMap.set(doc.id, {\r\n                    fullName: data.fullName || '',\r\n                    email: data.email || ''\r\n                });\r\n            });\r\n\r\n            const pairs: DepartmentMember[] = [];\r\n            petsSnap.forEach(doc => {\r\n                const data = doc.data();\r\n                const ownerId = data.ownerId;\r\n                if (ownerId && ownersMap.has(ownerId)) {\r\n                    pairs.push({\r\n                        OwnerId: ownerId,\r\n                        FullName: ownersMap.get(ownerId)!.fullName,\r\n                        Email: ownersMap.get(ownerId)!.email,\r\n                        PetId: doc.id,\r\n                        PetName: data.name || '(Không tên)'\r\n                    });\r\n                }\r\n            });\r\n\r\n            setDataDepartmentMember(pairs);\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className='form-approver'>\r\n                <div className='add-approvers'>\r\n                    <Form>\r\n                        <Row gutter={16}>\r\n                            {inputs.map((input, index) => (\r\n                                <Col xs={24} sm={24} md={12} lg={12} xl={8} key={index} className='col-request '>\r\n                                    <Form.Item\r\n                                        label={\r\n                                            <div className='label-approver'>\r\n                                                {editingIndex === index ? (\r\n                                                    <Space>\r\n                                                        <Input value={labelApprovers[index]} onChange={(e) => handleInputChangeApprover(index, e.target.value)} />\r\n                                                        <Button type=\"link\" onClick={() => handleSave(index)} icon={<SaveOutlined />} />\r\n                                                    </Space>\r\n                                                ) : (\r\n                                                    <Space>\r\n                                                        <div className='responsive-lable-approver'><span title={labelApprovers[index]}>{labelApprovers[index]}</span></div>\r\n                                                        <div className='responsive-btn-approver'>\r\n                                                            <Button type=\"link\" icon={<DeleteOutlined />} onClick={() => handleDelete(index)} />\r\n                                                            <Button type=\"link\" icon={<EditOutlined />} onClick={() => handleEdit(index)} />\r\n                                                            <Button type=\"link\" icon={<DragOutlined />} />\r\n                                                        </div>\r\n                                                    </Space>\r\n                                                )}\r\n                                            </div>\r\n                                        }\r\n                                        name={inputs[index]}\r\n                                        rules={[{ required: true, message: 'Vui lòng chọn một người nhận!' }]}\r\n                                        initialValue={initialValueApprover[index] ?? '--Chọn người nhận--'}\r\n                                        labelCol={{ span: 24 }}\r\n                                        className='responsive-send-approver'\r\n                                    >\r\n                                        <Select\r\n                                            labelInValue\r\n                                            virtual={false}\r\n                                            onChange={(value) => handleSelectChange(index, value)}\r\n                                            showSearch\r\n                                            optionFilterProp=\"children\"\r\n                                            filterOption={false}\r\n                                            onSearch={handleSearch}\r\n                                            className='responsive-select-option'\r\n                                        >\r\n                                            {filteredData().map((member, idx) => (\r\n                                                <Option key={`${member.OwnerId}|${member.PetId}`} value={`${member.OwnerId}|${member.PetId}`}>\r\n                                                    <div className='responsive-limit-width-ellipsis'>\r\n                                                        <div><strong>{member.FullName}</strong> {member.Email}</div>\r\n                                                        <div style={{ color: 'gray' }}>🐾 {member.PetName} (ID: {member.PetId})</div>\r\n                                                    </div>\r\n                                                </Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            ))}\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={8} className='btn-add-approver'>\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    onClick={handleAddInput}\r\n                                    style={{ backgroundColor: 'rgb(47,133,239)', color: 'white' }}\r\n                                >\r\n                                    Thêm\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SendApprover;","import MenuAdd from '../MenuAdd/menuAdd';\r\nimport SendApprover from '../SendApprover/sendApprover';\r\nimport RequestLayout from '../../RequestLayout';\r\nimport { Col, Input, Row, Form, Select, DatePicker, Spin, Alert, Upload, Button, message} from 'antd';\r\nimport './addRequest.css'\r\nimport '../SendApprover/sendApprover.css'\r\nimport { ChangeEvent, JSX, useEffect, useState } from 'react';\r\nimport dayjs, { Dayjs } from 'dayjs';\r\nimport { RcFile } from 'antd/es/upload';\r\nimport { db } from \"../../../Firebase/FirebaseConfig\"; \r\nimport { collection, query, where, onSnapshot, doc } from 'firebase/firestore';\r\nimport { DocumentSnapshot, DocumentData } from 'firebase/firestore';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { UploadFile } from 'antd/lib/upload';\r\n\r\nexport interface FormData {\r\n    notificationType?: string;\r\n    petId?: string;\r\n    violationLocation?: string;\r\n    violationTime?: string;\r\n    description?: string;\r\n    notes?: string;\r\n    [key: string]: any;\r\n}\r\n\r\nfunction AddRequest(): JSX.Element {\r\n\r\n    //set layout\r\n    const profile = false;\r\n\r\n    const [notificationOptions] = useState([\r\n        { value: 'vaccination', label: 'Tiêm phòng' },\r\n        { value: 'violation', label: 'Vi phạm' }\r\n      ]);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [fileList, setFileList] = useState<RcFile[]>([]);\r\n    const [applyNote, setApplyNote] = useState<boolean>(false);\r\n    const [listOfUserId, setListOfUserId] = useState<string[]>([]);\r\n    const [petOptions, setPetOptions] = useState<{ value: string; label: string }[]>([]);\r\n\r\n    //set initial formData\r\n    const [ownerInfo, setOwnerInfo] = useState<{ fullName: string; phone: string }>({\r\n        fullName: \"\",\r\n        phone: \"\"\r\n    });\r\n    //set formData post Api to server \r\n    const [formData, setFormData] = useState<FormData>({});\r\n\r\n    useEffect(() => {\r\n        let unsubscribe: () => void;\r\n      \r\n        const fetchActivePets = async () => {\r\n          try {\r\n            setLoading(true);\r\n            const q = query(\r\n              collection(db, 'pets'),\r\n              where('status', '==', 'Active')\r\n            );\r\n      \r\n            // Thiết lập real-time listener\r\n            unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n              const options = querySnapshot.docs.map(doc => ({\r\n                value: doc.id,\r\n                label: `${doc.data().name} <${doc.id}>`\r\n              }));\r\n              setPetOptions(options);\r\n              setLoading(false);\r\n            }, (error) => {\r\n              console.error('Error listening to pets:', error);\r\n              setLoading(false);\r\n            });\r\n      \r\n          } catch (error) {\r\n            console.error('Error initializing listener:', error);\r\n            setLoading(false);\r\n          }\r\n        };\r\n      \r\n        fetchActivePets();\r\n      \r\n        // Cleanup listener khi component unmount\r\n        return () => {\r\n          if (unsubscribe) unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let unsubscribePet: () => void;\r\n        let unsubscribeOwner: () => void;\r\n    \r\n        const fetchOwnerInfo = async (petId: string) => {\r\n            try {\r\n                \r\n                const petRef = doc(db, 'pets', petId);\r\n                unsubscribePet = onSnapshot(petRef, (petDoc: DocumentSnapshot<DocumentData>) => {\r\n                    if (!petDoc.exists()) {\r\n                        console.error(\"Pet document not found!\");\r\n                        return;\r\n                    }\r\n    \r\n                    const petData = petDoc.data();\r\n                    const ownerId = petData?.ownerId;\r\n                    \r\n                    if (!ownerId) {\r\n                        console.error(\"Owner ID not found in pet document\");\r\n                        return;\r\n                    }\r\n                        \r\n                    const ownerRef = doc(db, 'owners', ownerId);\r\n                    unsubscribeOwner = onSnapshot(ownerRef, (ownerDoc: DocumentSnapshot<DocumentData>) => {\r\n                        if (!ownerDoc.exists()) {\r\n                            console.error(\"Owner document not found!\");\r\n                            return;\r\n                        }\r\n    \r\n                        const ownerData = ownerDoc.data();\r\n                        \r\n                        setOwnerInfo({\r\n                            fullName: ownerData?.fullName || \"\",\r\n                            phone: ownerData?.phone || \"\"\r\n                        });\r\n                        \r\n                        setFormData(prev => ({\r\n                            ...prev,\r\n                            ownerEmail: ownerData?.email,\r\n                            phone: ownerData?.phone,\r\n                            ownerId: ownerId,\r\n                        }));\r\n                    });\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error fetching owner info:\", error);\r\n            }\r\n        };\r\n    \r\n        if (formData.petId) {\r\n            fetchOwnerInfo(formData.petId);\r\n        }\r\n    \r\n        return () => {\r\n            unsubscribePet?.();\r\n            unsubscribeOwner?.();\r\n        };\r\n    }, [formData.petId]);\r\n\r\n    const handleBeforeUpload = (file: RcFile) => {\r\n        const fileExtension = file.name.split('.').pop()?.toLowerCase();\r\n        const acceptedFileExtensions = ['png', 'jpg', 'jpeg', 'pdf', 'csv', 'doc', 'docx', 'pptx', 'ppt', 'txt', 'xls', 'xlsx'];\r\n        if (fileExtension && !acceptedFileExtensions.includes(fileExtension)) {\r\n            message.error(`File type not supported: ${fileExtension}`);\r\n            return false;\r\n        } else {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const handleRemoveFile = (file: UploadFile<any>) => {\r\n        const updatedFileList = fileList.filter((item) => item.uid !== file.uid);\r\n        setFileList(updatedFileList);\r\n    };\r\n\r\n    //set Mobile, Cost Center, Total passengers, Pick location, Destination, Reason values ​​for formdata\r\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        setFormData((prevFormData) => ({\r\n            ...prevFormData,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    //set User values ​​for formdata\r\n    const handleSelectChange = (value: any, field: string) => {\r\n        if (field === 'notificationType') {\r\n            setFormData(prev => ({\r\n              ...prev,\r\n              notificationType: value // Giá trị đã là chuỗi trực tiếp\r\n            }));\r\n        }\r\n        if (field === 'petId') {\r\n            const petIdValue = value.value; // Lấy giá trị thực từ object\r\n            setFormData((prevFormData) => ({\r\n                ...prevFormData,\r\n                [field]: petIdValue,\r\n            }));\r\n        } \r\n        else {\r\n            setFormData((prevFormData) => ({\r\n                ...prevFormData,\r\n                [field]: value,\r\n            }));\r\n        }\r\n    };\r\n\r\n    //set Usage time from, Usage time to, Pick time values ​​for formdata\r\n    const handleDatePicker = (value: Dayjs | null, field: string) => {\r\n        if (value) {\r\n            const formattedValue = value.format('YYYY-MM-DDTHH:mm:ss');\r\n            setFormData((prevFormData) => ({\r\n                ...prevFormData,\r\n                [field]: formattedValue,\r\n            }));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <RequestLayout profile={profile}>\r\n            {() => (\r\n                <div className='page-request'>\r\n                    <MenuAdd formData={formData} setFormData={setFormData} fileList={fileList} setFileList={setFileList} setLoading={setLoading}  listOfUserId={listOfUserId}/>\r\n                    <div className='page-content'>\r\n                        {loading\r\n                            ?\r\n                            (<Spin style={{ height: '100vh' }} tip=\"Loading...\" size=\"large\">\r\n                                <Alert\r\n                                    style={{ width: '100%', textAlign: 'center' }}\r\n                                    message=\"Loading...\"\r\n                                    description=\"Vui lòng chờ trong giây lát. Đừng tải lại trang.\"\r\n                                    type=\"info\"\r\n                                />\r\n                            </Spin>)\r\n                            :\r\n                            (\r\n                                <>\r\n                                    <div className='table-request'>\r\n                                        <h2 className='title-request'>YÊU CẦU QUẢN LÝ THÚ CƯNG</h2>\r\n                                        <div className='table-content'>\r\n                                            <Form\r\n                                                className='form-add-request'\r\n                                            >\r\n                                                <Row className='row-request'>\r\n                               \r\n                                                    {/* Notification Type */}\r\n                                                    <Col xs={24} sm={24} md={12} lg={8} xl={6} className='col-request'>\r\n                                                        <Form.Item\r\n                                                            label=\"Loại thông báo\"\r\n                                                            name=\"notificationType\"\r\n                                                            rules={[{ required: true, message: \"Vui lòng chọn loại thông báo\" }]}\r\n                                                            labelCol={{ span: 24 }}\r\n                                                        >\r\n                                                            <Select\r\n                                                                showSearch\r\n                                                                optionFilterProp=\"children\"\r\n                                                                filterOption={(input, option) =>\r\n                                                                    (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\r\n                                                                }\r\n                                                                onChange={(selectedOption) => handleSelectChange(selectedOption, 'notificationType')}\r\n                                                                placeholder='Vui lòng chọn loại thông báo'\r\n                                                                options={notificationOptions}\r\n                                                                className='responsive-select-option'\r\n                                                            >\r\n                                                            {notificationOptions.map(option => (\r\n                                                                <Select.Option \r\n                                                                    key={option.value} \r\n                                                                    value={option.value}\r\n                                                                >\r\n                                                                    {option.label}\r\n                                                                </Select.Option>\r\n                                                            ))}\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n\r\n                                                    {formData.notificationType === 'violation' && (\r\n                                                        <>\r\n                                                            {/*Info Pet*/}\r\n                                                            <Col xs={24} sm={24} md={12} lg={8} xl={6} className='col-request'>\r\n                                                                <Form.Item\r\n                                                                    label=\"Mã số thú cưng\"\r\n                                                                    name=\"petId\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: \"Mã số thú cưng là bắt buộc\",\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                    labelCol={{ span: 24 }}\r\n                                                                >\r\n                                                                    <Select\r\n                                                                        labelInValue\r\n                                                                        showSearch\r\n                                                                        loading={loading}\r\n                                                                        onChange={(value) => handleSelectChange(value, 'petId')}\r\n                                                                        optionFilterProp=\"label\"\r\n                                                                        filterOption={(input, option) => \r\n                                                                            (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\r\n                                                                        }\r\n                                                                        placeholder=\"Vui lòng chọn mã số thú cưng\"\r\n                                                                        options={petOptions}\r\n                                                                        className='responsive-select-option'\r\n                                                                        >\r\n                                                                        {petOptions.map(option => (\r\n                                                                            <Select.Option \r\n                                                                            key={option.value} \r\n                                                                            value={option.value}\r\n                                                                            label={option.label}\r\n                                                                            >\r\n                                                                            {option.label}\r\n                                                                            </Select.Option>\r\n                                                                        ))}\r\n                                                                    </Select>\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n\r\n                                                            {/* Owner Information */}\r\n                                                            <Col xs={24} sm={24} md={12} lg={8} xl={6} className='col-request'>\r\n                                                                    <Form.Item\r\n                                                                        required\r\n                                                                        label=\"Họ và tên chủ nuôi\"\r\n                                                                        labelCol={{ span: 24 }}\r\n                                                                    >\r\n                                                                        <Input \r\n                                                                            value={ownerInfo.fullName}\r\n                                                                            readOnly\r\n                                                                            placeholder='Tự động điền khi chọn mã thú cưng'\r\n                                                                        />\r\n                                                                    </Form.Item>\r\n                                                            </Col>\r\n\r\n                                                            {/*Request Mobile*/}\r\n                                                            <Col xs={24} sm={24} md={12} lg={8} xl={6} className='col-request'>\r\n                                                                <Form.Item\r\n                                                                    required\r\n                                                                    label=\"Số điện thoại\"\r\n                                                                    labelCol={{ span: 24 }}\r\n                                                                >\r\n                                                                    <Input \r\n                                                                        value={ownerInfo.phone}\r\n                                                                        readOnly\r\n                                                                        placeholder='Tự động điền khi chọn mã thú cưng'\r\n                                                                    />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n\r\n                                                            {/* Violation Location */}\r\n                                                            <Col xs={24} sm={24} md={12} lg={8} xl={6} className='col-request'>\r\n                                                                <Form.Item\r\n                                                                    label=\"Địa điểm vi phạm\"\r\n                                                                    name=\"violationLocation\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: \"Địa điểm vi phạm là bắt buộc\",\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                    labelCol={{ span: 24 }}\r\n                                                                >\r\n                                                                    <Input \r\n                                                                        placeholder='Vui lòng nhập địa điểm vi phạm'\r\n                                                                        type='text' \r\n                                                                        name='violationLocation' \r\n                                                                        onChange={handleInputChange} \r\n                                                                    />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n\r\n                                                            {/* Violation Time */}\r\n                                                            <Col xs={24} sm={24} md={12} lg={8} xl={6} className='col-request'>\r\n                                                                <Form.Item\r\n                                                                    label=\"Thời gian vi phạm\"\r\n                                                                    name=\"violationTime\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: \"Thời gian vi phạm là bắt buộc\",\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                    labelCol={{ span: 24 }}\r\n                                                                >\r\n                                                                    <DatePicker\r\n                                                                        className='add-request-width-formitem'\r\n                                                                        onChange={(value) => handleDatePicker(value, 'violationTime')}\r\n                                                                        showTime\r\n                                                                        format=\"DD/MM/YYYY HH:mm\"\r\n                                                                        placeholder=\"Thời gian vi phạm\"\r\n                                                                    />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n\r\n                                                            {/* Description */}\r\n                                                            <Col xs={24} sm={24} md={12} lg={8} xl={6} className='col-request'>\r\n                                                                <Form.Item\r\n                                                                    label=\"Miêu tả vi phạm\"\r\n                                                                    name=\"description\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: \"Vui lòng nhập miêu tả vi phạm\",\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                    labelCol={{ span: 24 }}\r\n                                                                >\r\n                                                                    <Input \r\n                                                                        type='text' \r\n                                                                        name=\"description\" \r\n                                                                        onChange={handleInputChange}\r\n                                                                        placeholder='Vui lòng nhập mô tả vi phạm'\r\n                                                                    >\r\n                                                                    </Input>\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n\r\n                                                            {/* Notes */}\r\n                                                            <Col xs={24} sm={24} md={12} lg={8} xl={6} className='col-request'>\r\n                                                                <Form.Item\r\n                                                                    label=\"Ghi chú\"\r\n                                                                    name=\"notes\"\r\n                                                                    labelCol={{ span: 24 }}\r\n                                                                >\r\n                                                                    <Input \r\n                                                                        type='text' \r\n                                                                        name=\"notes\" \r\n                                                                        onChange={handleInputChange}\r\n                                                                        placeholder='Vui lòng nhập ghi chú'\r\n                                                                    >\r\n                                                                    </Input>\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n\r\n                                                            <Col span={24} className='col-request'>\r\n                                                                <div className='Attachment'>\r\n                                                                    <b>Hình ảnh minh chứng</b>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                                \r\n                                                            <Col span={24} className='col-request'>\r\n                                                                <div className='reply-upload-comment' style={{ width: 'fit-content' }}>\r\n                                                                    <Upload\r\n                                                                        className='upload-attachment-addrequest'\r\n                                                                        beforeUpload={(file) => {\r\n                                                                            const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n                                                                            if (!isJpgOrPng) {\r\n                                                                              message.error('Chỉ cho phép file định dạng .JPG/.JPEG/.PNG!');\r\n                                                                              return Upload.LIST_IGNORE;\r\n                                                                            }\r\n                                                                        \r\n                                                                            const isLt10M = file.size / 1024 / 1024 < 10;\r\n                                                                            if (!isLt10M) {\r\n                                                                              message.error('Kích thước file phải nhỏ hơn 10MB!');\r\n                                                                              return Upload.LIST_IGNORE;\r\n                                                                            }\r\n                                                                        \r\n                                                                            handleBeforeUpload(file); // đẩy file vào danh sách fileList\r\n                                                                            return false; // ngăn Antd tự upload\r\n                                                                        }}\r\n                                                                        accept=\".png,.jpg,.jpeg\"                                                                        \r\n                                                                        fileList={fileList}\r\n                                                                        onRemove={handleRemoveFile}\r\n                                                                        multiple={true}\r\n                                                                    >\r\n                                                                        <Button \r\n                                                                            icon={<UploadOutlined />}\r\n                                                                            className='btn-attachment-comment'\r\n                                                                        >\r\n                                                                            <b>Tệp đính kèm</b>\r\n                                                                        </Button>\r\n                                                                        <span className='attention-upload-attachment'> (Chỉ chấp nhận file ảnh .png, .jpg, .jpeg, tối đa 10MB)</span>\r\n                                                                    </Upload>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                        </>\r\n                                                    )}\r\n\r\n                                                    {formData.notificationType === 'vaccination' && (\r\n                                                        <>\r\n                                                            {/* Vaccine Type */}\r\n                                                            <Col xs={24} sm={24} md={12} lg={8} xl={6} className='col-request'>\r\n                                                                <Form.Item\r\n                                                                    required\r\n                                                                    label=\"Loại vaccine\"\r\n                                                                    rules={[{ required: true, message: \"Loại vaccine là bắt buộc\" }]}\r\n                                                                    labelCol={{ span: 24 }}\r\n                                                                >\r\n                                                                    <Input \r\n                                                                        name=\"vaccineType\"\r\n                                                                        placeholder=\"VD: Vaccine phòng dại\"\r\n                                                                        type='text' \r\n                                                                        onChange={handleInputChange} \r\n                                                                    />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n\r\n                                                            {/* Vaccine address */}\r\n                                                            <Col xs={24} sm={24} md={12} lg={8} xl={6} className='col-request'>\r\n                                                                <Form.Item\r\n                                                                    required\r\n                                                                    label=\"Địa điểm tiêm\"\r\n                                                                    rules={[{ required: true, message: \"Địa điểm tiêm là bắt buộc\" }]}\r\n                                                                    labelCol={{ span: 24 }}\r\n                                                                >\r\n                                                                    <Input \r\n                                                                        name=\"vaccineLocation\"\r\n                                                                        placeholder=\"VD: Trạm thú y phường 5, Quận 10\"\r\n                                                                        type='text' \r\n                                                                        onChange={handleInputChange} \r\n                                                                    />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n\r\n                                                            {/* Cost */}\r\n                                                            <Col xs={24} sm={24} md={12} lg={8} xl={6} className='col-request'>\r\n                                                                <Form.Item\r\n                                                                    label=\"Chi phí (nếu có)\"\r\n                                                                    rules={[{ required: true, message: \"Chi phí là bắt buộc\" }]}\r\n                                                                    labelCol={{ span: 24 }}\r\n                                                                >\r\n                                                                    <Input\r\n                                                                        name=\"cost\"\r\n                                                                        placeholder=\"VD: 150000 (VND)\"\r\n                                                                        type='number'\r\n                                                                        onChange={handleInputChange}\r\n                                                                    />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n\r\n                                                            {/* Vaccine From */}\r\n                                                            <Col xs={24} sm={24} md={12} lg={8} xl={6} className='col-request'>\r\n                                                                <Form.Item\r\n                                                                    label=\"Từ ngày\"\r\n                                                                    name=\"vaccineFrom\"\r\n                                                                    rules={[{ required: true, message: \"Thời gian là bắt buộc\" }]}\r\n                                                                    labelCol={{ span: 24 }}\r\n                                                                >\r\n                                                                    <DatePicker\r\n                                                                        className='add-request-width-formitem'\r\n                                                                        onChange={(value) => handleDatePicker(value, 'vaccineFrom')}\r\n                                                                        showTime\r\n                                                                        format=\"DD/MM/YYYY HH:mm\"\r\n                                                                        placeholder=\"Thời gian từ lúc\"\r\n                                                                    />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n\r\n                                                            {/* Vaccine To */}\r\n                                                            <Col xs={24} sm={24} md={12} lg={8} xl={6} className='col-request'>\r\n                                                                <Form.Item\r\n                                                                    label=\"Đến ngày\"\r\n                                                                    name=\"vaccineTo\"\r\n                                                                    rules={[{ required: true, message: \"Thời gian là bắt buộc\" }]}\r\n                                                                    labelCol={{ span: 24 }}\r\n                                                                >\r\n                                                                    <DatePicker\r\n                                                                        className='add-request-width-formitem'\r\n                                                                        onChange={(value) => handleDatePicker(value, 'vaccineTo')}\r\n                                                                        showTime\r\n                                                                        format=\"DD/MM/YYYY HH:mm\"\r\n                                                                        placeholder=\"Thời gian đến lúc\"\r\n                                                                    />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            \r\n                                                            {/* Notes */}\r\n                                                            <Col xs={24} sm={24} md={12} lg={8} xl={6} className='col-request'>\r\n                                                                <Form.Item\r\n                                                                    label=\"Ghi chú\"\r\n                                                                    name=\"notes\"\r\n                                                                    labelCol={{ span: 24 }}\r\n                                                                >\r\n                                                                    <Input \r\n                                                                        type='text' \r\n                                                                        name=\"notes\" \r\n                                                                        onChange={handleInputChange}\r\n                                                                        placeholder='Vui lòng nhập ghi chú'\r\n                                                                    >\r\n                                                                    </Input>\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n\r\n                                                            {/* Issuing Agency */}\r\n                                                            <Col xs={24} sm={24} md={12} lg={8} xl={6} className='col-request'>\r\n                                                                <Form.Item\r\n                                                                    required\r\n                                                                    label=\"Cơ quan ban hành\"\r\n                                                                    rules={[{ required: true, message: \"Cơ quan ban hành là bắt buộc\" }]}\r\n                                                                    labelCol={{ span: 24 }}\r\n                                                                >\r\n                                                                    <Input\r\n                                                                        name=\"issuingAuthority\"\r\n                                                                        placeholder=\"VD: Trung tâm thú y Quận 10\"\r\n                                                                        type='text'\r\n                                                                        onChange={handleInputChange}\r\n                                                                    />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                        </>\r\n                                                    )}\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </div>\r\n                                    </div>\r\n                                    {formData.notificationType === 'vaccination' && (\r\n                                        <>\r\n                                            <h3>Gửi đến: </h3>\r\n                                            <SendApprover departmentId={formData.DepartmentId} fileList={fileList} setFileList={setFileList} applyNote={applyNote} setApplyNote={setApplyNote} listOfUserId={listOfUserId} setListOfUserId={setListOfUserId} />\r\n                                        </>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n\r\n                    </div>\r\n                </div>\r\n            )\r\n            }\r\n        </RequestLayout >\r\n    );\r\n}\r\n\r\nexport default AddRequest;"],"names":["uploadImageToCloudinary","async","formData","FormData","append","file","response","fetch","method","body","data","json","secure_url","console","error","_ref","setFormData","fileList","setFileList","setLoading","listOfUserId","navigate","useNavigate","_jsx","className","children","_jsxs","Menu","mode","Item","onClick","handleReturn","icon","ArrowLeftOutlined","createdAt","dayjs","format","userEmail","localStorage","getItem","notificationType","petId","violationLocation","violationTime","description","notes","ownerId","message","violationData","status","notificationBy","attachments","length","Promise","all","map","addDoc","collection","db","success","vaccineType","vaccineLocation","cost","vaccineFrom","vaccineTo","issuingAuthority","vaccinationData","timeFrom","timeTo","senderTo","userId","SendOutlined","applyNote","setApplyNote","setListOfUserId","departmentId","dataDepartmentMember","setDataDepartmentMember","useState","inputs","setInputs","editingIndex","setEditingIndex","counterApprover","setCounterApprover","labelApprovers","setLabelApprovers","searchValue","setSearchValue","initialValueApprover","setInitialValueApprover","Option","Select","openNotification","placement","notification","info","handleSearch","inputValue","useEffect","getFirestore","ownersSnap","getDocs","petsSnap","ownersMap","Map","forEach","doc","set","id","fullName","email","pairs","has","push","OwnerId","FullName","get","Email","PetId","PetName","name","fetchData","Form","Row","gutter","input","index","_initialValueApprover","Col","xs","sm","md","lg","xl","label","Space","Input","value","onChange","e","handleInputChangeApprover","newApprovers","target","Button","type","SaveOutlined","title","DeleteOutlined","newInputs","splice","newListOfUser","newInitiValueApprover","handleDelete","EditOutlined","handleEdit","DragOutlined","rules","required","initialValue","labelCol","span","labelInValue","virtual","handleSelectChange","includes","selected","find","d","newInitialValues","showSearch","optionFilterProp","filterOption","onSearch","filter","pair","toLowerCase","member","idx","style","color","handleAddInput","backgroundColor","notificationOptions","loading","petOptions","setPetOptions","ownerInfo","setOwnerInfo","phone","unsubscribe","q","query","where","onSnapshot","querySnapshot","options","docs","fetchActivePets","unsubscribePet","unsubscribeOwner","petRef","petDoc","exists","petData","ownerRef","ownerDoc","ownerData","prev","ownerEmail","fetchOwnerInfo","_unsubscribePet","_unsubscribeOwner","handleRemoveFile","updatedFileList","item","uid","handleInputChange","event","prevFormData","field","petIdValue","handleDatePicker","formattedValue","RequestLayout","profile","MenuAdd","Spin","height","tip","size","Alert","width","textAlign","_Fragment","option","_option$label","selectedOption","placeholder","_option$label2","readOnly","DatePicker","showTime","Upload","beforeUpload","LIST_IGNORE","_file$name$split$pop","fileExtension","split","pop","handleBeforeUpload","accept","onRemove","multiple","UploadOutlined","SendApprover","DepartmentId"],"sourceRoot":""}