{"version":3,"file":"static/js/440.09e640be.chunk.js","mappings":"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","sources":["Components/PetInfoModal/VaccinationHistoryModal.tsx","Components/PetInfoModal/PetInfoModal.tsx","Pages/ManageRequest/ManageRequest.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Modal, Descriptions, Typography, Spin, Grid, Tag } from 'antd';\r\nimport { CalendarOutlined } from '@ant-design/icons';\r\nimport { collection, onSnapshot, Timestamp } from 'firebase/firestore';\r\nimport { db } from '../../Firebase/FirebaseConfig';\r\n\r\nconst { Text } = Typography;\r\nconst { useBreakpoint } = Grid;\r\n\r\ninterface Props {\r\n  petId: string;\r\n  petName: string;\r\n  open: boolean;\r\n  onCancel: () => void;\r\n  onViewVaccinationDetail?: (record: any) => void;\r\n  setSelectedVaccination?: (v: any) => void;\r\n  setVaccinationModalVisible?: (v: boolean) => void;\r\n}\r\n\r\ninterface VaccinationItem {\r\n  id: string;\r\n  createdAt: Date;\r\n  vaccineType: string;\r\n  userId: string;\r\n  status: 'Pending' | 'Active';\r\n}\r\n\r\nconst VaccinationHistoryModal: React.FC<Props> = ({\r\n  petId,\r\n  petName,\r\n  open,\r\n  onCancel,\r\n  onViewVaccinationDetail // THÊM VÀO ĐÂY\r\n}) => {\r\n  const [vaccines, setVaccines] = useState<VaccinationItem[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const screens = useBreakpoint();\r\n\r\n  const formatDate = (date: Date): React.ReactNode => {\r\n    if (!date || isNaN(date.getTime())) {\r\n      return <Text type=\"secondary\">N/A</Text>;\r\n    }\r\n\r\n    const datePart = date.toLocaleDateString('vi-VN', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric',\r\n    });\r\n\r\n    const timePart = date.toLocaleTimeString('vi-VN', {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n    });\r\n\r\n    return (\r\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n        <span>\r\n          <CalendarOutlined style={{ marginRight: 6 }} />\r\n          <strong>{datePart}</strong>\r\n        </span>\r\n        <Text type=\"secondary\" style={{ marginLeft: 24 }}>{timePart}</Text>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    let unsubscribe: () => void;\r\n\r\n    const fetchVaccinations = () => {\r\n      try {\r\n        setLoading(true);\r\n        unsubscribe = onSnapshot(collection(db, 'vaccinations'), (snapshot) => {\r\n          const items: VaccinationItem[] = [];\r\n\r\n          snapshot.forEach((doc) => {\r\n            const data = doc.data();\r\n            const createdAtRaw = data.createdAt;\r\n            const createdAt = \r\n              createdAtRaw instanceof Timestamp \r\n                ? createdAtRaw.toDate()\r\n                : new Date(createdAtRaw);\r\n\r\n            if (Array.isArray(data.senderTo)) {\r\n              data.senderTo.forEach((entry: any) => {\r\n                const userIdParts = entry.userId?.split('|') || [];\r\n                const entryPetId = userIdParts[userIdParts.length - 1];\r\n                \r\n                if (entryPetId === petId) {\r\n                  items.push({\r\n                    id: doc.id,\r\n                    createdAt,\r\n                    userId: entry.userId,\r\n                    vaccineType: data.vaccineType || 'Không rõ',\r\n                    status: entry.status || 'Pending',\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          });\r\n\r\n          setVaccines(items);\r\n          setLoading(false);\r\n        });\r\n      } catch (error) {\r\n        console.error('Lỗi khi tải lịch sử tiêm phòng:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (open) fetchVaccinations();\r\n\r\n    return () => {\r\n      if (unsubscribe) unsubscribe();\r\n    };\r\n  }, [open, petId]);\r\n\r\n  const renderStatus = (status: string) => (\r\n    <Tag color={status === 'Active' ? 'green' : 'orange'} style={{ borderRadius: '12px' }}>\r\n      {status === 'Active' ? 'Đã hoàn thành' : 'Chưa giải quyết'}\r\n    </Tag>\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      title={`Lịch sử tiêm phòng của ${petName}`}\r\n      open={open}\r\n      onCancel={onCancel}\r\n      footer={null}\r\n      width={screens.xs ? '95vw' : 1200}\r\n      style={{ top: 30, maxWidth: '100vw' }}\r\n      styles={{\r\n        body: {\r\n          maxHeight: '70vh',\r\n          overflowY: 'auto',\r\n          padding: screens.xs ? '8px 12px' : '12px 16px',\r\n        },\r\n      }}\r\n    >\r\n      <Spin spinning={loading}>\r\n        {vaccines.length > 0 ? (\r\n          <Descriptions\r\n            bordered\r\n            column={1}\r\n            size={screens.xs ? 'small' : 'middle'}\r\n            labelStyle={{ width: screens.xs ? 100 : 200 }}\r\n          >\r\n            {vaccines.map((vaccine) => (\r\n              <Descriptions.Item\r\n                key={`${vaccine.id}-${vaccine.userId}`}\r\n                label={formatDate(vaccine.createdAt)}\r\n              >\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    flexDirection: screens.md ? 'row' : 'column',\r\n                    flexWrap: 'wrap',\r\n                    gap: 12,\r\n                    cursor: 'pointer'\r\n                  }}\r\n                  onClick={() => {\r\n                    if (onViewVaccinationDetail) {\r\n                      onViewVaccinationDetail({\r\n                        id: `${vaccine.id}_${vaccine.userId}`,\r\n                        type: 'Thông tin tiêm phòng',\r\n                        status: vaccine.status,\r\n                        requestCode: '',\r\n                        createdBy: '',\r\n                        createdAt: '',\r\n                        lastModifiedBy: '',\r\n                        lastUpdateTime: ''\r\n                      });\r\n                    }\r\n                    if (onCancel) {\r\n                      onCancel(); \r\n                    }\r\n                  }}                             \r\n                >\r\n                  <div style={{ flex: 2 }}>\r\n                    <Text strong>Mã tiêm phòng:</Text>\r\n                    <div>{vaccine.id}</div>\r\n                  </div>\r\n                  <div style={{ flex: 2 }}>\r\n                    <Text strong>Loại vắc-xin:</Text>\r\n                    <div>{vaccine.vaccineType}</div>\r\n                  </div>\r\n                  <div style={{ flex: 2 }}>\r\n                    <Text strong>Người nhận:</Text>\r\n                    <div>{vaccine.userId}</div>\r\n                  </div>\r\n                  <div style={{ flex: 1 }}>\r\n                    <Text strong>Trạng thái:</Text>\r\n                    <div>{renderStatus(vaccine.status)}</div>\r\n                  </div>\r\n                </div>\r\n              </Descriptions.Item>\r\n            ))}\r\n          </Descriptions>\r\n        ) : (\r\n          <div style={{ textAlign: 'center', padding: 20 }}>\r\n            <Text type=\"secondary\">Không có lịch sử tiêm phòng</Text>\r\n          </div>\r\n        )}\r\n      </Spin>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default VaccinationHistoryModal;","// PetInfoModal.tsx\r\nimport { Modal, Descriptions, Card, Grid, Tag, Typography, Image, Button, Spin, message} from 'antd';\r\nimport { PetType, OwnerType } from './types';\r\nimport './index.css';\r\nimport { CalendarOutlined } from '@ant-design/icons';\r\nimport { useState, useEffect} from 'react';\r\nimport { db } from \"../../Firebase/FirebaseConfig\";\r\nimport { collection, query, where, getDocs, onSnapshot } from \"firebase/firestore\";\r\nimport { doc, updateDoc } from \"firebase/firestore\";\r\nimport VaccinationHistoryModal from './VaccinationHistoryModal';\r\nimport { RequestType } from '../../Pages/ManageRequest/ManageRequest';\r\n\r\nconst { useBreakpoint } = Grid;\r\nconst { Text } = Typography;\r\n\r\ninterface PetInfoModalProps {\r\n  visible: boolean;\r\n  onCancel: () => void;\r\n  pet: PetType;\r\n  owner: OwnerType;\r\n  onViewViolationDetail: (record: ViolationType) => void;\r\n  setViolationModalVisible: (value: boolean) => void;\r\n  setSelectedViolation: (violation: any) => void;\r\n  violationModalVisible: boolean;\r\n  onViewVaccinationDetail?: (vaccination: RequestType) => void;\r\n  vaccinationModalVisible?: boolean;\r\n  setVaccinationModalVisible?: (visible: boolean) => void;\r\n  setSelectedVaccination?: (v: any) => void;\r\n}\r\n\r\ninterface ViolationType {\r\n  id: string;\r\n  description: string;\r\n  violationTime: string;\r\n  status: string;\r\n}\r\n\r\nconst PetInfoModal: React.FC<PetInfoModalProps> = ({\r\n  visible,\r\n  onCancel,\r\n  pet,\r\n  owner,\r\n  onViewViolationDetail,\r\n  setViolationModalVisible,\r\n  setSelectedViolation,\r\n  violationModalVisible, \r\n  onViewVaccinationDetail,\r\n  setSelectedVaccination,\r\n  setVaccinationModalVisible\r\n}) => {\r\n  const screens = useBreakpoint();\r\n  const [violationPetModalVisible, setViolationPetModalVisible] = useState(false);\r\n  const [violations, setViolations] = useState<ViolationType[]>([]);\r\n  const [violationsLoading, setViolationsLoading] = useState(false);\r\n  const [vaccinationModalOpen, setVaccinationModalOpen] = useState(false);\r\n  const [currentVaccinationStatus, setCurrentVaccinationStatus] = useState(pet.vaccinationStatus);\r\n  const [currentViolationStatus, setCurrentViolationStatus] = useState(pet.violationStatus); \r\n  \r\n  const renderStatusTag = (status: string) => (\r\n    <Tag color={status === 'Active' ? 'green' : 'orange'} style={{ borderRadius: '12px' }}>\r\n      {status === 'Active' ? 'Đã hoàn thành' : 'Chưa giải quyết'}\r\n    </Tag>\r\n  );\r\n\r\n  // PetInfoModal.tsx\r\n  const renderGenderTag = (\r\n      gender: string, \r\n      type: 'pet' | 'owner'\r\n  ) => \r\n    {\r\n      // Định nghĩa kiểu config với các key cụ thể\r\n      type GenderConfig = {\r\n      male: { color: string; text: string };\r\n      female: { color: string; text: string };\r\n      };\r\n  \r\n      // Sử dụng Record để xác định kiểu cho config\r\n      const config: Record<'pet' | 'owner', GenderConfig> = {\r\n      pet: {\r\n          male: { color: '#1890ff', text: 'Đực' },\r\n          female: { color: '#eb2f96', text: 'Cái' }\r\n      },\r\n      owner: {\r\n          male: { color: '#096dd9', text: 'Nam' },\r\n          female: { color: '#c41d7f', text: 'Nữ' }\r\n      }\r\n      };\r\n\r\n      // Kiểm tra kiểu an toàn với type assertion\r\n      const validGender = gender as keyof GenderConfig;\r\n      const { color, text } = config[type][validGender] || { color: '#d9d9d9', text: 'N/A' };\r\n  \r\n      return (\r\n      <Tag \r\n          color={color} \r\n          style={{ \r\n          borderRadius: '12px',\r\n          textTransform: 'capitalize' \r\n          }}\r\n      >\r\n          {text}\r\n      </Tag>\r\n      );\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    if (!dateString || dateString === 'N/A') return <Text type=\"secondary\">N/A</Text>;\r\n    \r\n    try {\r\n      const date = new Date(dateString);\r\n      return isNaN(date.getTime()) ? (\r\n        <Text type=\"secondary\">N/A</Text>\r\n      ) : (\r\n        <div className=\"date-container\">\r\n          <CalendarOutlined style={{ marginRight: 8 }} />\r\n          <span>\r\n            {date.toLocaleDateString('vi-VN', { \r\n              day: '2-digit', \r\n              month: '2-digit', \r\n              year: 'numeric' \r\n            })}\r\n            <Text type=\"secondary\" className=\"info-time\">\r\n              {date.toLocaleTimeString('vi-VN', { \r\n                hour: '2-digit', \r\n                minute: '2-digit' \r\n              })}\r\n            </Text>\r\n          </span>\r\n        </div>\r\n      );\r\n    } catch {\r\n      return <Text type=\"secondary\">N/A</Text>;\r\n    }\r\n  };\r\n\r\n  const formatDateViolation = (dateString: string) => {\r\n    if (!dateString || dateString === 'N/A') return <Text type=\"secondary\">N/A</Text>;\r\n  \r\n    try {\r\n      const date = new Date(dateString);\r\n      if (isNaN(date.getTime())) return <Text type=\"secondary\">N/A</Text>;\r\n  \r\n      const datePart = date.toLocaleDateString('vi-VN', {\r\n        day: '2-digit',\r\n        month: '2-digit',\r\n        year: 'numeric',\r\n      });\r\n  \r\n      const timePart = date.toLocaleTimeString('vi-VN', {\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n      });\r\n  \r\n      return (\r\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n          <span>\r\n            <CalendarOutlined style={{ marginRight: 6 }} />\r\n            <strong>{datePart}</strong>\r\n          </span>\r\n          <Text type=\"secondary\" style={{ marginLeft: 24 }}>{timePart}</Text>\r\n        </div>\r\n      );\r\n    } catch {\r\n      return <Text type=\"secondary\">N/A</Text>;\r\n    }\r\n  };  \r\n\r\n  const fetchViolations = async () => {\r\n    if (!pet.id) return;\r\n  \r\n    setViolationsLoading(true);\r\n    try {\r\n      const q = query(\r\n        collection(db, \"violations\"),\r\n        where(\"petId\", \"==\", pet.id)\r\n      );\r\n      \r\n      const querySnapshot = await getDocs(q);\r\n      const violationsData = querySnapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        violationTime: doc.data().violationTime,\r\n        description: doc.data().description,\r\n        status: doc.data().status\r\n      })) as ViolationType[];\r\n      \r\n      setViolations(violationsData);\r\n      checkAndUpdateViolationStatus(violationsData); \r\n    } catch (error) {\r\n      console.error(\"Lỗi khi tải vi phạm:\", error);\r\n      message.error(\"Không thể tải danh sách vi phạm\");\r\n    } finally {\r\n      setViolationsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Thêm hàm kiểm tra và cập nhật trạng thái vi phạm\r\n  const checkAndUpdateViolationStatus = async (violations: ViolationType[]) => { \r\n    try {\r\n      if (!pet.id) return;\r\n      \r\n      let newStatus = \"Không vi phạm\";\r\n      const hasPending = violations.some(v => v.status === \"Pending\");\r\n      \r\n      if (hasPending) {\r\n        newStatus = \"Đang vi phạm\";\r\n      }\r\n\r\n      // Chỉ cập nhật nếu trạng thái thay đổi\r\n      if (currentViolationStatus !== newStatus) {\r\n        await updateDoc(doc(db, 'pets', pet.id), {\r\n          violationStatus: newStatus\r\n        });\r\n        setCurrentViolationStatus(newStatus);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi cập nhật trạng thái vi phạm:\", error);\r\n      message.error(\"Cập nhật trạng thái vi phạm thất bại\");\r\n    }\r\n  };\r\n\r\n  const handleShowViolations = () => {\r\n    setViolationPetModalVisible(true);\r\n    fetchViolations();\r\n  };\r\n\r\n  // Thêm useEffect để lắng nghe real-time\r\n  useEffect(() => { \r\n    let unsubscribe: () => void;\r\n\r\n    if (visible && pet.id) {\r\n      const violationsRef = collection(db, 'violations');\r\n      unsubscribe = onSnapshot(violationsRef, () => {\r\n        fetchViolations();\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (unsubscribe) unsubscribe();\r\n    };\r\n  }, [visible, pet.id]);\r\n\r\n  // useEffect để cập nhật trạng thái tiêm phòng\r\n  useEffect(() => {\r\n    let unsubscribe: () => void;\r\n\r\n    const checkAndUpdateVaccinationStatus = async (petId: string) => {\r\n      try {\r\n        const vaccinationsSnapshot = await getDocs(collection(db, 'vaccinations'));\r\n        let hasEntries = false;\r\n        let allActive = true;\r\n\r\n        vaccinationsSnapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          if (Array.isArray(data.senderTo)) {\r\n            data.senderTo.forEach((entry: any) => {\r\n              const userIdParts = entry.userId?.split('|') || [];\r\n              const entryPetId = userIdParts[userIdParts.length - 1];\r\n              \r\n              if (entryPetId === petId) {\r\n                hasEntries = true;\r\n                if (entry.status !== 'Active') {\r\n                  allActive = false;\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n\r\n        const newStatus = hasEntries \r\n          ? (allActive ? \"Đã tiêm đủ\" : \"Chưa tiêm đủ\")\r\n          : \"Chưa tiêm đủ\";\r\n\r\n        if (pet.vaccinationStatus !== newStatus) {\r\n          await updateDoc(doc(db, 'pets', petId), {\r\n            vaccinationStatus: newStatus\r\n          });\r\n          setCurrentVaccinationStatus(newStatus);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Lỗi khi kiểm tra lịch sử tiêm phòng:\", error);\r\n      }\r\n    };\r\n\r\n    if (visible && pet.id) {\r\n      // Kiểm tra ngay khi mở modal và lắng nghe real-time\r\n      checkAndUpdateVaccinationStatus(pet.id);\r\n      unsubscribe = onSnapshot(collection(db, 'vaccinations'), () => {\r\n        checkAndUpdateVaccinationStatus(pet.id);\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (unsubscribe) unsubscribe();\r\n    };\r\n  }, [visible, pet.id, pet.vaccinationStatus]);\r\n\r\n  // Cập nhật state local khi prop thay đổi\r\n  useEffect(() => {\r\n    setCurrentVaccinationStatus(pet.vaccinationStatus);\r\n  }, [pet.vaccinationStatus]);\r\n\r\n  return (\r\n    <Modal\r\n      style={{\r\n        top: 30,\r\n        maxWidth: '100vw'\r\n      }}\r\n      styles={{\r\n        body: { \r\n          padding: '12px 16px',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          maxHeight: '75vh',\r\n          overflowY: 'auto',\r\n        },\r\n        content: {\r\n          maxWidth: '95vw',\r\n          // top: 50,\r\n        }\r\n      }}\r\n      className=\"pet-info-modal\"\r\n      title={\r\n        <div className=\"modal-title\">\r\n          {/* <HeartFilled style={{ color: '#ff4d4f', fontSize: '1.8rem' }} /> */}\r\n          <span>Thông tin định danh thú cưng</span>\r\n        </div>\r\n      }\r\n      open={visible}\r\n      onCancel={onCancel}\r\n      footer={null}\r\n      width={screens.md ? 860 : '90%'}\r\n      centered\r\n      destroyOnClose\r\n    >\r\n      {/* Pet Information */}\r\n      <Card \r\n        className=\"pet-info-card pet-card\"\r\n        style={{ flexShrink: 0 }}\r\n        title=\"Thông tin thú cưng\"\r\n        cover={pet.imageUrl && <Image \r\n          src={pet.imageUrl} \r\n          alt=\"pet-image\"\r\n          height={200}\r\n          preview={false}\r\n          style={{ objectFit: 'cover' }}\r\n        />}\r\n      >\r\n        <Descriptions \r\n          column={screens.md ? 2 : 1}\r\n          size=\"middle\"\r\n          labelStyle={{ fontWeight: 600 }}\r\n          contentStyle={{ fontWeight: 500 }}\r\n        >\r\n          <Descriptions.Item label=\"Tên\" span={2}>\r\n            <Text strong className=\"info-value\">{pet.name || 'N/A'}</Text>\r\n          </Descriptions.Item>\r\n\r\n          <Descriptions.Item label={<>Loài</>}>{pet.species}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Giống\">{pet.breed}</Descriptions.Item>\r\n\r\n          <Descriptions.Item label=\"Tuổi\">{pet.age} năm</Descriptions.Item>\r\n          <Descriptions.Item label=\"Giới tính\">\r\n            {renderGenderTag(pet.gender, 'pet')}\r\n          </Descriptions.Item>\r\n\r\n          <Descriptions.Item\r\n            label={\r\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <span>Sức khỏe</span>\r\n                <Button \r\n                    type=\"link\" \r\n                    size=\"small\" \r\n                    style={{ padding: 0, marginTop: 2 }}\r\n                >\r\n                    Xem thêm\r\n                </Button>\r\n              </div>\r\n            }\r\n          >\r\n            <div className=\"health-status\">\r\n              <div>\r\n                <div>{pet.healthStatus}</div>\r\n                {pet.lastCheckHealthDate && (\r\n                    <div className=\"last-check\">\r\n                    {formatDate(pet.lastCheckHealthDate)}\r\n                    </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Descriptions.Item>\r\n\r\n          <Descriptions.Item\r\n            label={\r\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <span>Vi phạm</span>\r\n                <Button type=\"link\" size=\"small\" style={{ padding: 0, marginTop: 2 }} onClick={handleShowViolations}>\r\n                    Xem thêm\r\n                </Button>\r\n                <Modal\r\n                  title={`Lịch sử vi phạm của ${pet.name}`}\r\n                  open={violationPetModalVisible}\r\n                  onCancel={() => setViolationPetModalVisible(false)}\r\n                  footer={null}\r\n                  width={screens.xs ? '95vw' : 900}\r\n                  style={{\r\n                    top: 30,\r\n                    maxWidth: '100vw',\r\n                  }}\r\n                  styles={{\r\n                    body: {\r\n                      maxHeight: '70vh',\r\n                      overflowY: 'auto',\r\n                      padding: screens.xs ? '8px 12px' : '12px 16px',\r\n                    },\r\n                  }}\r\n                >\r\n                  <Spin spinning={violationsLoading}>\r\n                    {violations.length > 0 ? (\r\n                      <Descriptions\r\n                        bordered\r\n                        column={1}\r\n                        size={screens.xs ? 'small' : 'middle'}\r\n                        labelStyle={{ width: screens.xs ? 100 : 200 }}\r\n                      >\r\n                        {violations.map((violation) => (\r\n                          <Descriptions.Item\r\n                            key={violation.id}\r\n                            label={formatDateViolation(violation.violationTime)}\r\n                          >\r\n                            <div\r\n                              style={{\r\n                                display: 'flex',\r\n                                flexDirection: screens.md ? 'row' : 'column',\r\n                                gap: 12,\r\n                                cursor: 'pointer',\r\n                              }}\r\n                              onClick={() => {\r\n                                setViolationPetModalVisible(false);\r\n                                setTimeout(() => {\r\n                                  onViewViolationDetail(violation); \r\n                                }, 0);\r\n                              }}                              \r\n                            >\r\n                              <div style={{ flex: 2 }}>\r\n                                <Text strong>Mã vi phạm:</Text>\r\n                                <div style={{ marginTop: 4 }}>{violation.id}</div>\r\n                              </div>\r\n                              <div style={{ flex: 2 }}>\r\n                                <Text strong>Mô tả:</Text>\r\n                                <div style={{ marginTop: 4 }}>\r\n                                  {violation.description || 'Không có mô tả'}\r\n                                </div>\r\n                              </div>\r\n                              <div style={{ flex: 1 }}>\r\n                                <Text strong>Trạng thái:</Text>\r\n                                <div style={{ marginTop: 4 }}>\r\n                                  {renderStatusTag(violation.status)}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </Descriptions.Item>\r\n                        ))}\r\n                      </Descriptions>\r\n                    ) : (\r\n                      <div style={{ textAlign: 'center', padding: 20 }}>\r\n                        <Text type=\"secondary\">Không có vi phạm nào</Text>\r\n                      </div>\r\n                    )}\r\n                  </Spin>\r\n                </Modal>\r\n              </div>\r\n            }\r\n          >\r\n            <div className={currentViolationStatus === 'Đang vi phạm' ? 'violation-info' : 'no-violation'}> \r\n              {currentViolationStatus || \"Không có thông tin\"} \r\n              {pet.lastViolationDate && (\r\n                <div className=\"violation-date\">\r\n                  {formatDate(pet.lastViolationDate)}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </Descriptions.Item>\r\n\r\n          <Descriptions.Item \r\n            label={\r\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                  <span>Tiêm phòng</span>\r\n                  <Button type=\"link\" size=\"small\" style={{ padding: 0, marginTop: 2 }} onClick={() => setVaccinationModalOpen(true)}>\r\n                    Xem thêm\r\n                  </Button>\r\n                  <VaccinationHistoryModal\r\n                    open={vaccinationModalOpen}\r\n                    onCancel={() => setVaccinationModalOpen(false)}\r\n                    petId={pet.id}\r\n                    petName={pet.name}\r\n                    onViewVaccinationDetail={onViewVaccinationDetail}\r\n                    setSelectedVaccination={setSelectedVaccination}\r\n                    setVaccinationModalVisible={setVaccinationModalVisible}\r\n                  />\r\n                </div>\r\n              }\r\n            >\r\n            <Tag \r\n              color={currentVaccinationStatus === 'Đã tiêm đủ' ? '#52c41a' : '#ffa940'}\r\n              className=\"vaccine-tag\"\r\n            >\r\n              {currentVaccinationStatus}\r\n            </Tag>\r\n          </Descriptions.Item>\r\n\r\n          <Descriptions.Item label=\"Lần tiêm cuối\">\r\n            {formatDate(pet.lastVaccineDate)}\r\n          </Descriptions.Item>\r\n\r\n        </Descriptions>\r\n      </Card>\r\n\r\n      {/* Owner Information */}\r\n      <Card \r\n        className=\"pet-info-card owner-card\"\r\n        style={{ marginTop: 24 }}\r\n        title=\"Thông tin chủ nuôi\" \r\n      >\r\n        <Descriptions \r\n          column={screens.md ? 2 : 1}\r\n          size=\"middle\"\r\n          labelStyle={{ fontWeight: 600 }}\r\n        >\r\n          <Descriptions.Item label={<>Họ tên</>} span={2}>\r\n            <Text strong>{owner.fullName || 'N/A'}</Text>\r\n          </Descriptions.Item>\r\n\r\n          <Descriptions.Item label={<>Số điện thoại</>}>{owner.phone}</Descriptions.Item>\r\n          <Descriptions.Item label={<>Email</>}>{owner.email}</Descriptions.Item>\r\n\r\n          <Descriptions.Item label=\"Số căn cước\">{owner.cccd}</Descriptions.Item>\r\n          \r\n          <Descriptions.Item label=\"Giới tính\">\r\n            {renderGenderTag(owner.sex ? 'male' : 'female', 'owner')}\r\n          </Descriptions.Item>\r\n\r\n          <Descriptions.Item label=\"Ngày sinh\">\r\n            {formatDate(owner.birthday)}\r\n          </Descriptions.Item>\r\n          \r\n          <Descriptions.Item label={<>Địa chỉ</>} span={2}>\r\n            <div className=\"address-info\">\r\n              {owner.address}\r\n            </div>\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n      </Card>\r\n\r\n      {/* Last Update Section */}\r\n      <div className=\"last-update\">\r\n        <Text type=\"secondary\">\r\n          Cập nhật lần cuối: {formatDate(pet.lastUpdateTime)}\r\n        </Text>\r\n        <div style={{ marginTop: 8 }}>\r\n          <Text type=\"secondary\">Thực hiện bởi: {pet.lastModifiedBy}</Text>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PetInfoModal;","import { useState, useEffect } from 'react'\r\nimport \"./index.css\";\r\nimport { Spin, Button, Input, Space, Table, message, Modal, Select, InputNumber, Tag, Tooltip} from 'antd';\r\nimport { TagOutlined, ExperimentOutlined, PhoneOutlined, HomeOutlined, PlusOutlined, ArrowRightOutlined, FileTextOutlined, CheckCircleOutlined, UserOutlined, CalendarOutlined, ClockCircleOutlined, EnvironmentOutlined, PictureOutlined} from '@ant-design/icons';\r\nimport RequestLayout from '../../Components/RequestLayout';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { setTab, setStatus } from '../../Actions/requestAction';\r\nimport { RootState } from '../../Reducers/rootReducer';\r\nimport { Form } from 'antd';\r\nimport { db } from \"../../Firebase/FirebaseConfig\"; \r\nimport { getDocs, getDoc, collection, query, where, onSnapshot, doc, updateDoc, DocumentData} from \"firebase/firestore\";\r\nimport PetInfoModal from '../../Components/PetInfoModal/PetInfoModal';\r\nimport {PetType, OwnerType} from '../../Components/PetInfoModal/types';\r\nimport { Descriptions, Image } from 'antd';\r\nimport { UserInfo } from '../../Reducers/requestReducer';\r\n\r\nexport interface RequestType {\r\n  id: string;\r\n  requestCode: string;\r\n  status: string;\r\n  createdBy: string;\r\n  createdAt: string;\r\n  lastModifiedBy: string;\r\n  lastUpdateTime: string;\r\n  type: string; \r\n  description?: string;\r\n  notes?: string;\r\n  violationLocation?: string;\r\n  violationTime?: any;\r\n  attachments?: string[]; \r\n}\r\n\r\ninterface ManageRequestProps {\r\n  tab: string | null;\r\n  status: string | null;\r\n  userInfo: UserInfo;\r\n  setTab: (tab: string) => void;\r\n  setStatus: (status: string) => void; \r\n}\r\n\r\nconst statusMapping = {\r\n  'Writing': 'Đang ghi thẻ',\r\n  'Processing': 'Đang xử lý',\r\n  'Active': 'Đã hoàn thành',\r\n  'Pending': 'Chưa giải quyết'\r\n} as const;\r\n\r\ntype StatusKey = keyof typeof statusMapping;\r\ntype StatusValue = typeof statusMapping[StatusKey];\r\n\r\nconst { Search } = Input;\r\n\r\nconst ManageRequest: React.FC<ManageRequestProps> = (props) => {\r\n\r\n  const [requestData, setRequestData] = useState<RequestType[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [form] = Form.useForm();\r\n  const [filteredData, setFilteredData] = useState<RequestType[]>([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [selectedRequest, setSelectedRequest] = useState<RequestType | null>(null);\r\n\r\n  const [infoModalVisible, setInfoModalVisible] = useState(false);\r\n  const [selectedPet, setSelectedPet] = useState<PetType | null>(null);\r\n  const [selectedOwner, setSelectedOwner] = useState<OwnerType | null>(null);\r\n  const [petRequests, setPetRequests] = useState<RequestType[]>([]);\r\n  const [deviceRequests, setDeviceRequests] = useState<RequestType[]>([]);\r\n  const [violationRequests, setViolationRequests] = useState<RequestType[]>([]); \r\n  const [vaccinationRequests, setVaccinationRequests] = useState<RequestType[]>([]);\r\n  const [violationModalVisible, setViolationModalVisible] = useState(false);\r\n  const [selectedViolation, setSelectedViolation] = useState<any>(null);\r\n  const [selectedPetInViolation, setSelectedPetInViolation] = useState<PetType | null>(null);\r\n  const [selectedOwnerInViolation, setSelectedOwnerInViolation] = useState<OwnerType | null>(null);\r\n  const [vaccinationModalVisible, setVaccinationModalVisible] = useState(false);\r\n  const [selectedVaccination, setSelectedVaccination] = useState<any>(null);\r\n  const [selectedPets, setSelectedPets] = useState<PetType[]>([]);\r\n  const [selectedOwnerVaccination, setSelectedOwnerVaccination] = useState<OwnerType | null>(null);\r\n  const [selectedPetInVaccination, setSelectedPetInVaccination] = useState<PetType | null>(null);\r\n  const [selectedOwnerInVaccination, setSelectedOwnerInVaccination] = useState<OwnerType | null>(null);\r\n\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: 10,\r\n    total: 0,\r\n  });\r\n\r\n  // Thêm vào phần khai báo state\r\n  const defaultOwner: OwnerType = {\r\n    id: '',\r\n    address: 'N/A',\r\n    birthday: 'N/A',\r\n    cccd: 'N/A',\r\n    email: 'N/A',\r\n    fullName: 'N/A',\r\n    phone: 'N/A',\r\n    sex: 'N/A',\r\n    updateAt: 'N/A'\r\n  };\r\n\r\n  const handleVaccinationClick = async (record: RequestType) => {\r\n    try {\r\n      setLoading(true);\r\n      const [vaccinationId, ...rest] = record.id.split('_');\r\n      const userId = rest.join('_'); // Ghép lại toàn bộ phần còn lại\r\n      const vaccinationDoc = await getDoc(doc(db, \"vaccinations\", vaccinationId));\r\n      \r\n      if (vaccinationDoc.exists()) {\r\n        const vaccinationData = vaccinationDoc.data();\r\n        const statusDisplay = vaccinationData.status === \"Pending\" \r\n          ? \"Chưa giải quyết\" \r\n          : \"Đã hoàn thành\";\r\n        \r\n        // Tìm user cụ thể trong senderTo\r\n        const userEntry = (vaccinationData.senderTo || []).find(\r\n          (u: any) => u.userId === userId\r\n        );        \r\n  \r\n        const vaccinationWithId = {\r\n          ...vaccinationData,\r\n          id: vaccinationDoc.id,\r\n          userId, \r\n          status: userEntry?.status || statusDisplay, \r\n          ...(statusDisplay === \"Đã hoàn thành\" && {\r\n            resolvedAt: userEntry?.resolvedAt || 'N/A',\r\n            resolvedBy: userEntry?.resolvedBy || 'N/A'\r\n          }),\r\n          createdAt: formatDate(vaccinationData.createdAt),\r\n          timeFrom: formatDate(vaccinationData.timeFrom),\r\n          timeTo: formatDate(vaccinationData.timeTo),\r\n          vaccineLocation: vaccinationData.vaccineLocation,\r\n          issuingAuthority: vaccinationData.issuingAuthority,\r\n          cost: vaccinationData.cost,\r\n          notes: vaccinationData.notes,\r\n          vaccineType: vaccinationData.vaccineType || \"N/A\",\r\n          senderTo: [userEntry] \r\n        };\r\n  \r\n        // Tách ownerId và petId từ userId\r\n        const [ownerId, petId] = userId.split('|');\r\n\r\n        // Lấy danh sách thú cưng theo ownerId\r\n        if (ownerId) {\r\n          const petQuery = query(\r\n            collection(db, \"pets\"),\r\n            where(\"ownerId\", \"==\", ownerId)\r\n          );\r\n          const petSnapshot = await getDocs(petQuery);\r\n          const pets = petSnapshot.docs.map((doc: DocumentData) => ({\r\n            id: doc.id,\r\n            ...doc.data()\r\n          }) as PetType);\r\n          setSelectedPets(pets);\r\n        }\r\n\r\n        // Lấy thông tin chi tiết thú cưng theo petId\r\n        if (petId) {\r\n          const petDoc = await getDoc(doc(db, \"pets\", petId));\r\n          if (petDoc.exists()) {\r\n            const petData = { id: petDoc.id, ...petDoc.data() } as PetType;\r\n            setSelectedPetInVaccination(petData);\r\n          } else {\r\n            setSelectedPetInVaccination(null);\r\n          }\r\n        } else {\r\n          setSelectedPetInVaccination(null);\r\n        }\r\n\r\n        // Lấy thông tin chủ nuôi theo ownerId\r\n        if (ownerId) {\r\n          const ownerDoc = await getDoc(doc(db, \"owners\", ownerId));\r\n          if (ownerDoc.exists()) {\r\n            setSelectedOwnerInVaccination(ownerDoc.data() as OwnerType);\r\n          } else {\r\n            setSelectedOwnerInVaccination(null);\r\n          }\r\n        } else {\r\n          setSelectedOwnerInVaccination(null);\r\n        }\r\n\r\n        setSelectedVaccination(vaccinationWithId);\r\n        setVaccinationModalVisible(true);\r\n      }\r\n    } catch (error) {\r\n      message.error(\"Lỗi khi tải thông tin tiêm phòng\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleViolationClick = async (record: RequestType) => {\r\n    try {\r\n      setLoading(true);\r\n      const violationDoc = await getDoc(doc(db, \"violations\", record.id));\r\n      \r\n      if (violationDoc.exists()) {\r\n        const violationData = violationDoc.data();\r\n        const statusDisplay = violationData.status === \"Pending\" \r\n        ? \"Chưa giải quyết\" \r\n        : \"Đã hoàn thành\";\r\n        const violationWithId = {\r\n          ...violationData,\r\n          id: violationDoc.id,\r\n          status: statusDisplay,\r\n          createdAt: formatDate(violationData.createdAt),\r\n          violationTime: formatDate(violationData.violationTime),\r\n          attachments: violationData.attachments || [],\r\n        };\r\n\r\n        // Fetch thông tin thú cưng\r\n        if (violationData.petId) {\r\n          const petDoc = await getDoc(doc(db, \"pets\", violationData.petId));\r\n          if (petDoc.exists()) {\r\n            const petData = { id: petDoc.id, ...petDoc.data() } as PetType;\r\n            setSelectedPetInViolation(petData);\r\n            \r\n            // Fetch thông tin chủ nuôi\r\n            if (petData.ownerId) {\r\n              const ownerDoc = await getDoc(doc(db, \"owners\", petData.ownerId));\r\n              if (ownerDoc.exists()) {\r\n                setSelectedOwnerInViolation(ownerDoc.data() as OwnerType);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        setSelectedViolation(violationWithId);\r\n        setViolationModalVisible(true);\r\n      }\r\n    } catch (error) {\r\n      message.error(\"Lỗi khi tải thông tin vi phạm\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (page: number, pageSize: number) => {\r\n    setPagination(prev => ({\r\n      ...prev,\r\n      current: page,\r\n      pageSize: pageSize,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const violationsQuery = query(\r\n      collection(db, \"violations\")\r\n    );\r\n\r\n    const unsubscribeViolations = onSnapshot(violationsQuery, (querySnapshot) => {\r\n      const violationsData: RequestType[] = [];\r\n      querySnapshot.forEach((doc) => {\r\n        const violationData = doc.data();\r\n\r\n        let statusDisplay, lastModifiedBy, lastUpdateTime;\r\n        if (violationData.status === \"Pending\") {\r\n          statusDisplay = \"Chưa giải quyết\";\r\n          lastModifiedBy = violationData.handlerBy || 'N/A';\r\n          lastUpdateTime = violationData.updatedAt;\r\n        } else if (violationData.status === \"Active\") {\r\n          statusDisplay = \"Đã hoàn thành\";\r\n          lastModifiedBy = violationData.resolvedBy || 'N/A';\r\n          lastUpdateTime = violationData.resolvedAt;\r\n        } else return;\r\n        \r\n        violationsData.push({\r\n          id: doc.id,\r\n          type: \"Thông tin vi phạm\",\r\n          requestCode: doc.id,\r\n          status: statusDisplay,\r\n          createdBy: violationData.notificationBy || 'N/A',\r\n          createdAt: formatDate(violationData.createdAt),\r\n          lastModifiedBy: lastModifiedBy,\r\n          lastUpdateTime: formatDate(lastUpdateTime),\r\n          description: violationData.description,\r\n          notes: violationData.notes,\r\n          violationLocation: violationData.violationLocation,\r\n          violationTime: violationData.violationTime,\r\n          attachments: violationData.attachments || [],\r\n        });\r\n      });\r\n      setViolationRequests(violationsData);\r\n    }, (error) => {\r\n      message.error(\"Lỗi khi tải dữ liệu vi phạm: \" + error.message);\r\n    });\r\n\r\n    return () => unsubscribeViolations();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const vaccinationsQuery = query(\r\n      collection(db, \"vaccinations\")\r\n    );\r\n  \r\n    const unsubscribeVaccinations = onSnapshot(vaccinationsQuery, (querySnapshot) => {\r\n      const vaccinationsData: RequestType[] = [];\r\n      querySnapshot.forEach((vaccinationDoc) => {\r\n        const vaccinationData = vaccinationDoc.data();\r\n        const senderTo = vaccinationData.senderTo || [];\r\n  \r\n        // Xử lý từng user trong senderTo\r\n        senderTo.forEach((user: any) => {\r\n          const statusDisplay = user.status === \"Pending\" \r\n            ? \"Chưa giải quyết\" \r\n            : \"Đã hoàn thành\";\r\n  \r\n          vaccinationsData.push({\r\n            id: `${vaccinationDoc.id}_${user.userId}`,\r\n            type: \"Thông tin tiêm phòng\",\r\n            requestCode: `${vaccinationDoc.id} | ${user.userId || 'N/A'}`,\r\n            status: statusDisplay,\r\n            createdBy: vaccinationData.notificationBy || 'N/A',\r\n            createdAt: formatDate(vaccinationData.createdAt) || 'N/A', \r\n            lastModifiedBy: user.resolvedBy || '',                      \r\n            lastUpdateTime: formatDate(user.resolvedAt) || '',         \r\n          });\r\n        });\r\n      });\r\n      setVaccinationRequests(vaccinationsData);\r\n    }, (error) => {\r\n      message.error(\"Lỗi khi tải dữ liệu tiêm phòng: \" + error.message);\r\n    });\r\n  \r\n    return () => unsubscribeVaccinations();\r\n  }, []);\r\n\r\n  useEffect(() => { \r\n    // Xử lý pets\r\n    const petsQuery = query(\r\n      collection(db, \"pets\"),\r\n      where(\"status\", \"in\", [\"Processing\", \"Active\", \"Writing\"])\r\n    );\r\n  \r\n    const unsubscribePets = onSnapshot(petsQuery, (querySnapshot) => {\r\n      const petsData: RequestType[] = [];\r\n      querySnapshot.forEach((doc) => {\r\n        const petData = doc.data();\r\n        \r\n        petsData.push({\r\n          id: doc.id,\r\n          type: \"Định danh chó(mèo)\", // Thêm trường type\r\n          requestCode: doc.id,\r\n          status: petData.status === \"Active\" \r\n            ? \"Đã hoàn thành\" \r\n            : petData.status === \"Writing\" \r\n            ? \"Đang ghi thẻ\" \r\n            : \"Đang xử lý\",\r\n          createdBy: petData.rfidReaderId || 'N/A',\r\n          createdAt: formatDate(petData.createdAt),\r\n          lastModifiedBy: petData.lastModifiedBy || 'N/A',\r\n          lastUpdateTime: formatDate(petData.lastUpdateTime)\r\n        });\r\n      });\r\n      setPetRequests(petsData);\r\n      setLoading(false);\r\n    }, (error) => {\r\n      message.error(\"Lỗi khi tải dữ liệu thú cưng: \" + error.message);\r\n      setLoading(false);\r\n    });\r\n  \r\n    // Xử lý thiết bị\r\n    const devicesQuery = query(collection(db, \"rfidReaderDevices\"));\r\n    \r\n    const unsubscribeDevices = onSnapshot(devicesQuery, (querySnapshot) => {\r\n      const devicesData: RequestType[] = [];\r\n      querySnapshot.forEach((doc) => {\r\n        const deviceData = doc.data();\r\n        \r\n        const createdAt = deviceData.createAt || deviceData.createdAt; \r\n\r\n        // Thêm logic chuyển đổi status\r\n        const deviceStatus = deviceData.status === \"Active\" ? \"Đã hoàn thành\" : \"Đang xử lý\"; // Mặc định cho các trạng thái khác\r\n\r\n        devicesData.push({\r\n          id: doc.id,\r\n          type: \"Thông tin thiết bị\", // Thêm trường type\r\n          requestCode: doc.id,\r\n          status: deviceStatus,\r\n          createdBy: doc.id, // Sử dụng ID document làm người tạo\r\n          createdAt: formatDate(createdAt),\r\n          lastModifiedBy: '', // Thiết bị không có người thực hiện\r\n          lastUpdateTime: '' // Thiết bị không có ngày thực hiện\r\n        });\r\n      });\r\n      setDeviceRequests(devicesData);\r\n    }, (error) => {\r\n      message.error(\"Lỗi khi tải dữ liệu thiết bị: \" + error.message);\r\n    });\r\n  \r\n    return () => {\r\n      unsubscribePets();\r\n      unsubscribeDevices();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Hàm chuyển đổi chuỗi ngày tháng thành Date object\r\n    const parseDate = (dateStr: string) => {\r\n      if (dateStr === 'N/A') return new Date(0);\r\n      const [day, month, year] = dateStr.split('/');\r\n      return new Date(`${year}-${month}-${day}`);\r\n    };\r\n\r\n    // Hàm lọc kết hợp cả tab và status\r\n    const filterData = (data: RequestType[]) => {\r\n      let filtered = data;\r\n    \r\n      // Lọc theo tab\r\n      switch (props.tab) {\r\n        case 'get-devices':\r\n          filtered = filtered.filter(item => item.type === \"Thông tin thiết bị\");\r\n          break;\r\n        case 'get-pets':\r\n          filtered = filtered.filter(item => item.type === \"Định danh chó(mèo)\");\r\n          break;\r\n        case 'get-violations':\r\n          filtered = filtered.filter(item => item.type === \"Thông tin vi phạm\");\r\n          break;\r\n        case 'get-vaccines':\r\n          filtered = filtered.filter(item => item.type === \"Thông tin tiêm phòng\");\r\n          break;\r\n      }\r\n    \r\n      // Lọc theo status với type safety\r\n      if (props.status) {\r\n        const statusKey = props.status as StatusKey;\r\n        if (statusMapping[statusKey]) {\r\n          filtered = filtered.filter(item => item.status === statusMapping[statusKey]);\r\n        }\r\n      }\r\n    \r\n      return filtered;\r\n    };\r\n\r\n    const combinedData = [...petRequests, ...deviceRequests, ...violationRequests, ...vaccinationRequests]\r\n      .sort((a, b) => {\r\n        const dateA = parseDate(a.createdAt);\r\n        const dateB = parseDate(b.createdAt);\r\n        return dateB.getTime() - dateA.getTime();\r\n      });\r\n\r\n    const finalData = filterData(combinedData);\r\n\r\n    setRequestData(finalData);\r\n    setFilteredData(finalData);\r\n    setPagination(prev => ({\r\n      ...prev,\r\n      total: finalData.length,\r\n    }));\r\n  }, [petRequests, deviceRequests, violationRequests, vaccinationRequests, props.tab, props.status]);\r\n  \r\n  // Hàm xử lý ngày tháng cải tiến\r\n  const formatDate = (date: any) => {\r\n    try {\r\n      // Xử lý cả Timestamp object và string\r\n      const dateObj = date?.toDate?.() || new Date(date);\r\n      return isNaN(dateObj.getTime()) \r\n        ? 'N/A' \r\n        : dateObj.toLocaleDateString('vi-VN', {\r\n            day: '2-digit',\r\n            month: '2-digit',\r\n            year: 'numeric'\r\n          });\r\n    } catch (error) {\r\n      return 'N/A';\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Loại yêu cầu',\r\n      dataIndex: 'type', // Thay đổi từ render cố định\r\n      key: 'type',\r\n    },\r\n    {\r\n      title: 'Mã yêu cầu',\r\n      dataIndex: 'requestCode',\r\n      key: 'requestCode',\r\n      render: (text: string) => (\r\n        <Tooltip\r\n          title={\r\n            <div \r\n              style={{ \r\n                whiteSpace: 'pre-line',    // Cho phép xuống dòng\r\n                textAlign: 'center',       // Căn giữa nội dung\r\n                wordBreak: 'break-word',   // Xử lý tràn chữ\r\n                lineHeight: '1.5',         // Giãn cách dòng\r\n              }}\r\n            >\r\n              {text.replace(/\\|/g, '\\n')}  {/* Thay thế | thành xuống dòng */}\r\n            </div>\r\n          }\r\n          overlayStyle={{ \r\n            maxWidth: '300px',            // Giới hạn chiều rộng tối đa\r\n          }}\r\n        >\r\n          <span \r\n            style={{ cursor: 'help' }} \r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            {text.split('|')[0]}          {/* Hiển thị phần trước dấu | */}\r\n          </span>\r\n        </Tooltip>\r\n      )\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      render: (status: string, record: RequestType) => {\r\n        let color = '#1890ff';\r\n        \r\n        if (record.type === 'Định danh chó(mèo)') {\r\n          // Logic cho thú cưng\r\n          if (status === 'Đang ghi thẻ') color = '#ffa500';\r\n          else if (status === 'Đang xử lý') color = '#ffd700';\r\n          else if (status === 'Đã hoàn thành') color = '#52c41a';\r\n        } \r\n        else if (record.type === 'Thông tin vi phạm') {\r\n          color = status === 'Chưa giải quyết' ? '#ff4d4f' : '#52c41a'; \r\n          status = status === 'Chưa giải quyết' ? 'Chưa giải quyết' : 'Đã hoàn thành';\r\n        }\r\n        else if (record.type === 'Thông tin tiêm phòng') {\r\n          color = status === 'Chưa giải quyết' ? '#ff4d4f' : '#52c41a';\r\n        }\r\n        else {\r\n          // Logic mới cho thiết bị\r\n          color = status === 'Đã hoàn thành' ? '#52c41a' : '#ff4d4f';\r\n        }\r\n        \r\n        return <span style={{ color, fontWeight: 500 }}>{status}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: 'Người tạo',\r\n      dataIndex: 'createdBy',\r\n      key: 'createdBy',\r\n    },\r\n    {\r\n      title: 'Ngày tạo',\r\n      dataIndex: 'createdAt',\r\n      key: 'createdAt',\r\n      sorter: (a: RequestType, b: RequestType) => {\r\n        const parseDate = (dateStr: string) => {\r\n          if (dateStr === 'N/A') return new Date(0);\r\n          const [day, month, year] = dateStr.split('/');\r\n          return new Date(`${year}-${month}-${day}`);\r\n        };\r\n        return parseDate(a.createdAt).getTime() - parseDate(b.createdAt).getTime();\r\n      },\r\n    },\r\n    {\r\n      title: 'Người thực hiện',\r\n      dataIndex: 'lastModifiedBy',\r\n      key: 'executor',\r\n      render: (text: string, record: RequestType) => {\r\n        const { type, status } = record;\r\n        if (\r\n          (type === 'Thông tin vi phạm' || type === 'Thông tin tiêm phòng') &&\r\n          status === 'Đã hoàn thành'\r\n        ) {\r\n          return text || 'N/A';\r\n        }\r\n        if (type === 'Định danh chó(mèo)' && status !== 'Đang xử lý') {\r\n          return text || 'N/A';\r\n        }\r\n        return '';\r\n      }\r\n    },\r\n    {\r\n      title: 'Ngày thực hiện',\r\n      dataIndex: 'lastUpdateTime',\r\n      key: 'executionDate',\r\n      render: (text: string, record: RequestType) => {\r\n        const { type, status } = record;\r\n        if (\r\n          (type === 'Thông tin vi phạm' || type === 'Thông tin tiêm phòng') &&\r\n          status === 'Đã hoàn thành'\r\n        ) {\r\n          return text || 'N/A';\r\n        }\r\n        if (type === 'Định danh chó(mèo)' && status !== 'Đang xử lý') {\r\n          return text || 'N/A';\r\n        }\r\n        return '';\r\n      }\r\n    }    \r\n  ];\r\n\r\n  useEffect(() => {\r\n    const lowerQuery = searchQuery.toLowerCase();\r\n    const filtered = requestData.filter(request => {\r\n      const safeString = (str?: string) => (str || '').toLowerCase();\r\n      \r\n      return [\r\n        safeString(request.requestCode),\r\n        safeString(request.createdBy),\r\n        safeString(request.createdAt),\r\n        safeString(request.type)\r\n      ].some(field => field.includes(lowerQuery));\r\n    });\r\n    \r\n    setFilteredData(filtered);\r\n  }, [searchQuery, requestData]);\r\n  \r\n  const profile = false;\r\n\r\n  const handleOk = async () => {\r\n    try {\r\n      // 1. Validate form và lấy giá trị\r\n      const values = await form.validateFields();\r\n      \r\n      const ageValue = Number(values.age) || 0; // Fallback về 0 nếu không hợp lệ\r\n      const roundedAge = Math.round(ageValue * 10) / 10; // Làm tròn 1 số thập phân\r\n\r\n      if (!selectedRequest) {\r\n        message.error(\"Không tìm thấy thú cưng!\");\r\n        return;\r\n      }\r\n\r\n      // Hàm tạo timestamp theo định dạng local (không UTC)\r\n      const getLocalTimestamp = () => {\r\n        const now = new Date();\r\n        const pad = (n: number) => n.toString().padStart(2, '0');\r\n        return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}T${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\r\n      };\r\n\r\n      // Lấy thông tin người dùng từ localStorage\r\n      const userEmail = localStorage.getItem('email') || 'Unknown';\r\n\r\n      // Tạo timestamp\r\n      const currentTime = getLocalTimestamp(); // Sử dụng hàm mới\r\n      \r\n      // Object chứa các trường thời gian\r\n      const timeFields = {\r\n        lastUpdateTime: currentTime,\r\n        lastModifiedBy: userEmail,\r\n        ...(values.healthStatus && { \r\n          lastCheckHealthDate: currentTime \r\n        }),\r\n        ...(values.vaccinationStatus && { \r\n          lastVaccineDate: currentTime \r\n        }),\r\n        ...(values.violationStatus && { \r\n          lastViolationDate: currentTime \r\n        })\r\n      };\r\n\r\n      // 2. Chuẩn bị dữ liệu cho Firestore\r\n      const petData = {\r\n        ...values,\r\n        ...timeFields,\r\n        age: roundedAge, \r\n        name: values.name,\r\n        species: values.species,\r\n        breed: values.breed,\r\n        gender: values.gender,\r\n        \r\n        // Thông tin sức khỏe\r\n        healthStatus: values.healthStatus,\r\n        vaccinationStatus: values.vaccinationStatus,\r\n        \r\n        // Thông tin chủ sở hữu\r\n        ownerId: values.ownerId,\r\n        \r\n        // Metadata\r\n        status: \"Writing\", // Cập nhật trạng thái\r\n      \r\n      };\r\n\r\n      // 3. Cập nhật vào Firestore\r\n      const petRef = doc(db, \"pets\", selectedRequest.id);\r\n      await updateDoc(petRef, petData);\r\n      \r\n      // 4. Thông báo và đóng modal\r\n      message.success(\"Cập nhật thông tin thành công!\");\r\n      setIsModalVisible(false);\r\n      form.resetFields();\r\n\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi cập nhật:\", error);\r\n      message.error(\"Cập nhật thất bại! Vui lòng kiểm tra lại thông tin.\");\r\n    }\r\n  };\r\n  \r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    form.resetFields();\r\n  };\r\n\r\n  // Thêm interface cho Owner\r\n  interface Owner{\r\n    id: string;\r\n    fullName: string;\r\n    email: string;\r\n  }\r\n\r\n  // Trong component ManageRequest, thêm state\r\n  const [owners, setOwners] = useState<Owner[]>([]);\r\n\r\n  // Fetch data từ Firestore\r\n  useEffect(() => {\r\n    const q = query(collection(db, \"owners\"));\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      const ownerData = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      })) as Owner[];\r\n      setOwners(ownerData);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n  \r\n  const handleRowClick = async (record: RequestType, source: 'notification' | 'table' = 'table') => {\r\n    if (record.type === 'Định danh chó(mèo)') {\r\n      if (record.status === 'Đã hoàn thành') {\r\n        // Xử lý hiển thị thông tin thú cưng\r\n        setLoading(true);\r\n        try {\r\n          const petDoc = await getDoc(doc(db, \"pets\", record.id));\r\n          const petData = { id: petDoc.id, ...petDoc.data() } as PetType; \r\n          setSelectedOwner(defaultOwner);\r\n          \r\n          if (petData.ownerId) {\r\n            const ownerDoc = await getDoc(doc(db, \"owners\", petData.ownerId));\r\n            const ownerData = ownerDoc.data() as OwnerType;\r\n            setSelectedOwner({ ...defaultOwner, ...ownerData });\r\n          }\r\n          \r\n          setSelectedPet(petData);\r\n          setInfoModalVisible(true);\r\n\r\n          // ✅ Nếu được gọi từ NotificationDropdown thì cập nhật message\r\n          if (source === 'notification') {\r\n            const notiQuery = query(\r\n              collection(db, \"notifications\"),\r\n              where(\"petId\", \"==\", petData.id)\r\n            );\r\n            const notiSnapshot = await getDocs(notiQuery);\r\n            for (const notiDoc of notiSnapshot.docs) {\r\n              await updateDoc(doc(db, \"notifications\", notiDoc.id), {\r\n                message: \"Seen\"\r\n              });\r\n            }\r\n          }\r\n\r\n        } catch (error) {\r\n          message.error(\"Lỗi khi tải thông tin chi tiết\");\r\n        }\r\n        setLoading(false);\r\n      } else if (record.status === 'Đang xử lý') {\r\n        setSelectedRequest(record);\r\n        setIsModalVisible(true);\r\n      }\r\n    } else if (record.type === 'Thông tin thiết bị' && record.status === 'Đã hoàn thành') {\r\n      navigate(`/device/${record.id}`); // 👉 chuyển sang trang chi tiết thiết bị\r\n    } else if (record.type === 'Thông tin vi phạm') {\r\n      handleViolationClick(record);\r\n    } else if (record.type === 'Thông tin tiêm phòng') {\r\n      handleVaccinationClick(record);\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <RequestLayout profile={profile} onRowClick={handleRowClick}>\r\n      {() => (\r\n        <div style={{ overflowX: 'hidden' }} className='request'>\r\n          <div className='manage-request-navbar'>\r\n            <div className='manage-request-title'>Yêu cầu về thú cưng</div>\r\n            <Space.Compact size=\"large\">\r\n              <Search\r\n                className='search-bar'\r\n                placeholder=\"Tìm kiếm\"\r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n                onSearch={(value) => setSearchQuery(value)}\r\n                enterButton\r\n              />\r\n            </Space.Compact>\r\n            <div className='manage-request-button-navbar'>\r\n              <Button style={{ marginRight: 5, marginLeft: 5, backgroundColor: '#5cb85c', color: 'white', fontFamily: 'Segoe UI', fontWeight: 600 }} onClick={() => navigate('/addrequest')}><PlusOutlined /><span className='text-create-new'>Tạo mới</span></Button>\r\n            </div>\r\n          </div>\r\n          <div className='manage-request-content'>\r\n            <Spin spinning={loading}>\r\n                <Table\r\n                  rowKey={(record) => record.id}\r\n                  columns={columns}\r\n                  dataSource={filteredData}\r\n                  pagination={{\r\n                    ...pagination,\r\n                    position: ['bottomRight'],\r\n                    style: { \r\n                      margin: 0, \r\n                      position: 'sticky' \r\n                    },\r\n                    showSizeChanger: true,\r\n                    responsive: true,\r\n                    pageSizeOptions: ['10', '20', '50', '100'],\r\n                    onChange: handlePageChange,\r\n                    onShowSizeChange: handlePageChange,\r\n                    showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`,\r\n                  }}\r\n                  bordered\r\n                  scroll={{ x: 'max-content' }}\r\n                  onRow={(record) => ({\r\n                    onClick: () => handleRowClick(record),\r\n                    style: {\r\n                      cursor: record.type === 'Định danh chó(mèo)' && \r\n                             (record.status === 'Đã hoàn thành' || record.status === 'Đang xử lý') \r\n                        ? 'pointer' \r\n                        : 'default'\r\n                    }\r\n                  })}\r\n                />\r\n                {infoModalVisible && selectedPet && (\r\n                  <PetInfoModal\r\n                    visible={infoModalVisible}\r\n                    onCancel={() => setInfoModalVisible(false)}\r\n                    pet={selectedPet}\r\n                    owner={selectedOwner || defaultOwner}\r\n                    onViewViolationDetail={(violation) => {\r\n                      handleViolationClick({\r\n                        id: violation.id,\r\n                        type: 'Thông tin vi phạm',\r\n                        status: violation.status,\r\n                        requestCode: '',\r\n                        createdBy: '',\r\n                        createdAt: '',\r\n                        lastModifiedBy: '',\r\n                        lastUpdateTime: ''\r\n                      });\r\n                    }}                    \r\n                    setViolationModalVisible={setViolationModalVisible}\r\n                    setSelectedViolation={setSelectedViolation}\r\n                    violationModalVisible={violationModalVisible}\r\n                    \r\n                    onViewVaccinationDetail={(vaccination) => {\r\n                      handleVaccinationClick({\r\n                        id: vaccination.id,\r\n                        type: 'Thông tin tiêm phòng',\r\n                        status: vaccination.status,\r\n                        requestCode: '',\r\n                        createdBy: '',\r\n                        createdAt: '',\r\n                        lastModifiedBy: '',\r\n                        lastUpdateTime: ''\r\n                      });\r\n                    }}\r\n                    setSelectedVaccination={setSelectedVaccination}\r\n                    setVaccinationModalVisible={setVaccinationModalVisible}\r\n                    vaccinationModalVisible={vaccinationModalVisible}\r\n                  />\r\n                )}\r\n                <Modal\r\n                  title=\"Định danh thông tin thú cưng\"\r\n                  open={isModalVisible}\r\n                  onOk={handleOk}\r\n                  onCancel={handleCancel}\r\n                  okText=\"Lưu\"\r\n                  cancelText=\"Hủy\"\r\n                  centered\r\n                  destroyOnClose\r\n                  width={window.innerWidth < 768 ? '90%' : 600}\r\n                  style={{\r\n                    borderRadius: '12px',\r\n                    overflow: 'hidden',\r\n                    boxShadow: '0 8px 32px rgba(0, 0, 0, 0.2)',\r\n                    maxHeight: '80vh',\r\n                  }}\r\n                  styles={{\r\n                    header: {\r\n                      borderBottom: '1px solid #f0f0f0',\r\n                      padding: '20px 24px',\r\n                      backgroundColor: '#f8f9fa',\r\n                      fontSize: '18px',\r\n                      fontWeight: 600,\r\n                      color: '#1d1d1d'\r\n                    },\r\n                    body: {\r\n                      backgroundColor: '#ffffff',\r\n                      maxHeight: '50vh',\r\n                      overflowY: 'auto',\r\n                      padding: '16px',\r\n                    },\r\n                    footer: {\r\n                      borderTop: '1px solid #f0f0f0',\r\n                      padding: '16px 24px'\r\n                    }\r\n                  }}\r\n                >\r\n                  <Form\r\n                    form={form}\r\n                    layout=\"vertical\"\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexWrap: 'wrap',\r\n                      gap: '16px'\r\n                    }}\r\n                  >\r\n                    {/* Global style cho các form item */}\r\n                    <style>{`\r\n                      .ant-form-item-control-input {\r\n                        min-height: 40px !important;\r\n                      }\r\n                      .ant-input-number, .ant-input-number-input-wrap {\r\n                        height: 40px !important;\r\n                      }\r\n                      .ant-select-selector {\r\n                        height: 40px !important;\r\n                        align-items: center !important;\r\n                      }\r\n                    `}</style>\r\n\r\n                    {/* Row 1 - Tên thú cưng */}\r\n                    <Form.Item\r\n                      name=\"name\"\r\n                      label={<span style={{ display: 'block', marginBottom: '8px', fontWeight: 500, color: '#2d3436', fontSize: '14px' }}>Tên thú cưng</span>}\r\n                      rules={[\r\n                        { required: true, message: 'Vui lòng nhập tên!' },\r\n                        { max: 16, message: 'Tên không được vượt quá 16 ký tự!' }\r\n                      ]}\r\n                      style={{ flex: '1 1 100%', marginBottom: 0 }}\r\n                    >\r\n                      <Input\r\n                        placeholder=\"VD: Milu,...\"\r\n                        style={{\r\n                          padding: '10px 14px',\r\n                          borderRadius: '8px',\r\n                          border: '1px solid #e0e0e0',\r\n                          fontSize: '14px',\r\n                          lineHeight: '1.5',\r\n                          height: '40px',\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </Form.Item>\r\n\r\n                    {/* Row 2 - Loài và Giống */}\r\n                    <Form.Item\r\n                      name=\"species\"\r\n                      label={<span style={{ display: 'block', marginBottom: '8px', fontWeight: 500, color: '#2d3436', fontSize: '14px' }}>Loài</span>}\r\n                      rules={[\r\n                        { required: true, message: 'Vui lòng chọn loài!' },\r\n                        { max: 16, message: 'Loài không được vượt quá 16 ký tự!' }\r\n                      ]}\r\n                      style={{ flex: '1 1 48%', marginBottom: 0 }}\r\n                    >\r\n                      <Select\r\n                        placeholder=\"VD: Chó, Mèo,...\"\r\n                        style={{\r\n                          width: '100%',\r\n                          borderRadius: '8px',\r\n                          border: '1px solid #e0e0e0',\r\n                          height: '40px'\r\n                        }}\r\n                        dropdownStyle={{\r\n                          borderRadius: '8px',\r\n                          boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\r\n                          padding: '8px 0'\r\n                        }}\r\n                      >\r\n                        <Select.Option value=\"Chó\" style={{ padding: '10px 16px', height: '40px', display: 'flex', alignItems: 'center' }}>Chó</Select.Option>\r\n                        <Select.Option value=\"Mèo\" style={{ padding: '10px 16px', height: '40px', display: 'flex', alignItems: 'center' }}>Mèo</Select.Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      name=\"breed\"\r\n                      label={<span style={{ display: 'block', marginBottom: '8px', fontWeight: 500, color: '#2d3436', fontSize: '14px' }}>Giống</span>}\r\n                      style={{ flex: '1 1 48%', marginBottom: 0 }}\r\n                      rules={[\r\n                        { required: true, message: 'Vui lòng nhập giống!' },\r\n                        { max: 16, message: 'Giống không được vượt quá 16 ký tự!' }\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        placeholder=\"VD: Poodle,...\"\r\n                        style={{\r\n                          padding: '10px 14px',\r\n                          borderRadius: '8px',\r\n                          border: '1px solid #e0e0e0',\r\n                          fontSize: '14px',\r\n                          height: '40px',\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </Form.Item>\r\n\r\n                    {/* Row 3 - Tuổi, Giới tính, Vaccine */}\r\n                    <Form.Item\r\n                      required\r\n                      name=\"age\"\r\n                      label={<span style={{ display: 'block', marginBottom: '8px', fontWeight: 500, color: '#2d3436', fontSize: '14px' }}>Tuổi</span>}\r\n                      rules={[{ type: 'number', min: 0, max: 50 }]}\r\n                      style={{ flex: '1 1 30%', marginBottom: 0 }}\r\n                    >\r\n                      <div style={{ height: '40px' }}>\r\n                        <InputNumber\r\n                          min={0}\r\n                          max={50}\r\n                          placeholder=\"VD: 2\"\r\n                          style={{\r\n                            width: '100%',\r\n                            borderRadius: '8px',\r\n                            border: '1px solid #e0e0e0',\r\n                            height: '40px'\r\n                          }}\r\n                          formatter={(value) => `${value}`}\r\n                          onChange={(value) => {\r\n                            form.setFieldsValue({ age: Number(value) });\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      required\r\n                      name=\"gender\"\r\n                      label={<span style={{ display: 'block', marginBottom: '8px', fontWeight: 500, color: '#2d3436', fontSize: '14px' }}>Giới tính</span>}\r\n                      style={{ flex: '1 1 30%', marginBottom: 0 }}\r\n                    >\r\n                      <Select\r\n                        placeholder=\"Chọn giới tính\"\r\n                        style={{\r\n                          width: '100%',\r\n                          borderRadius: '8px',\r\n                          border: '1px solid #e0e0e0',\r\n                          height: '40px'\r\n                        }}\r\n                      >\r\n                        <Select.Option value=\"male\" style={{ padding: '10px 16px', height: '40px', display: 'flex', alignItems: 'center' }}>Đực</Select.Option>\r\n                        <Select.Option value=\"female\" style={{ padding: '10px 16px', height: '40px', display: 'flex', alignItems: 'center' }}>Cái</Select.Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      name=\"vaccinationStatus\"\r\n                      label={<span style={{ display: 'block', marginBottom: '8px', fontWeight: 500, color: '#2d3436', fontSize: '14px' }}>Vaccine</span>}\r\n                      style={{ flex: '1 1 30%', marginBottom: 0 }}\r\n                    >\r\n                      <Select\r\n                        placeholder=\"VD: Đã tiêm đủ\"\r\n                        style={{\r\n                          width: '100%',\r\n                          borderRadius: '8px',\r\n                          border: '1px solid #e0e0e0',\r\n                          height: '40px'\r\n                        }}\r\n                      >\r\n                        <Select.Option value=\"Đã tiêm đủ\" style={{ padding: '10px 16px', height: '40px', display: 'flex', alignItems: 'center' }}>Đã tiêm đủ</Select.Option>\r\n                        <Select.Option value=\"Chưa tiêm đủ\" style={{ padding: '10px 16px', height: '40px', display: 'flex', alignItems: 'center' }}>Chưa tiêm đủ</Select.Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n\r\n                    {/* Row 4 - Sức khỏe */}\r\n                    <Form.Item\r\n                      name=\"healthStatus\"\r\n                      label={<span style={{ display: 'block', marginBottom: '8px', fontWeight: 500, color: '#2d3436', fontSize: '14px' }}>Tình trạng sức khỏe</span>}\r\n                      style={{ flex: '1 1 100%', marginBottom: 0 }}\r\n                    >\r\n                      <Input.TextArea\r\n                        rows={3}\r\n                        placeholder=\"Mô tả tình trạng sức khỏe\"\r\n                        style={{\r\n                          borderRadius: '8px',\r\n                          border: '1px solid #e0e0e0',\r\n                          resize: 'vertical',\r\n                          padding: '10px 14px',\r\n                          fontSize: '14px',\r\n                          minHeight: '40px',\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </Form.Item>\r\n\r\n                    {/* Row 5 - Vi phạm */}\r\n                    <Form.Item\r\n                      name=\"violationStatus\"\r\n                      label={<span style={{ display: 'block', marginBottom: '8px', fontWeight: 500, color: '#2d3436', fontSize: '14px' }}>Thông tin vi phạm</span>}\r\n                      style={{ flex: '1 1 100%', marginBottom: 0 }}\r\n                    >\r\n                      <Input.TextArea\r\n                        rows={3}\r\n                        placeholder=\"Mô tả tình trạng vi phạm\"\r\n                        style={{\r\n                          borderRadius: '8px',\r\n                          border: '1px solid #e0e0e0',\r\n                          resize: 'vertical',\r\n                          padding: '10px 14px',\r\n                          fontSize: '14px',\r\n                          minHeight: '40px',\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </Form.Item>\r\n\r\n                    {/* Row 6 - Chủ nuôi */}\r\n                    <Form.Item\r\n                      name=\"ownerId\"\r\n                      label={<span style={{ display: 'block', marginBottom: '8px', fontWeight: 500, color: '#2d3436', fontSize: '14px' }}>Chủ nuôi</span>}\r\n                      rules={[{ required: true, message: 'Vui lòng chọn chủ nuôi!' }]}\r\n                      style={{ flex: '1 1 100%', marginBottom: 0 }}\r\n                    >\r\n                      <Select\r\n                        showSearch\r\n                        placeholder=\"Chọn chủ nuôi\"\r\n                        optionFilterProp=\"children\"\r\n                        filterOption={(input, option) =>\r\n                          (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\r\n                        }\r\n                        options={owners.map(owner => ({\r\n                          value: owner.id,\r\n                          label: `${owner.fullName} <${owner.email}>`\r\n                        }))}\r\n                        style={{\r\n                          width: '100%',\r\n                          borderRadius: '8px',\r\n                          border: '1px solid #e0e0e0',\r\n                          height: '40px'\r\n                        }}\r\n                        dropdownStyle={{\r\n                          borderRadius: '8px',\r\n                          boxShadow: '0 4px 12px rgba(0,0,0,0.1)'\r\n                        }}\r\n                      />\r\n                    </Form.Item>\r\n                  </Form>\r\n                </Modal>\r\n\r\n                <Modal\r\n                  title={<span style={{ \r\n                    fontSize: '22px',\r\n                    fontWeight: 700,\r\n                    color: '#1890ff',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    gap: '8px'\r\n                  }}>\r\n                    <FileTextOutlined /> Chi tiết vi phạm\r\n                  </span>}\r\n                  open={violationModalVisible}\r\n                  onCancel={() => setViolationModalVisible(false)}\r\n                  footer={selectedViolation?.status === \"Chưa giải quyết\" ? [\r\n                    <Button \r\n                      key=\"resolve\" \r\n                      type=\"primary\"\r\n                      style={{ \r\n                        backgroundColor: '#52c41a',\r\n                        borderColor: '#52c41a',\r\n                        fontWeight: 600,\r\n                        boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\r\n                        borderRadius: '6px',\r\n                        padding: '0 24px',\r\n                        height: '40px',\r\n                        transition: 'all 0.3s',\r\n                      }}\r\n                      onClick={async () => {\r\n                        try {\r\n                          const now = new Date();\r\n                          const formattedDate = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}-${String(now.getDate()).padStart(2, '0')}T${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}:${String(now.getSeconds()).padStart(2, '0')}`;\r\n                          await updateDoc(doc(db, \"violations\", selectedViolation.id), {\r\n                            status: \"Active\",\r\n                            resolvedAt: formattedDate,\r\n                            resolvedBy: localStorage.getItem('email') || 'Unknown'\r\n                          });\r\n                          message.success(\"Đã giải quyết vi phạm thành công!\");\r\n                          setViolationModalVisible(false);\r\n                        } catch (error) {\r\n                          message.error(\"Lỗi khi cập nhật trạng thái vi phạm\");\r\n                        }\r\n                      }}\r\n                    >\r\n                      <CheckCircleOutlined /> Giải quyết\r\n                    </Button>\r\n                  ]: null}\r\n                  width={window.innerWidth < 768 ? '90%' : 800}\r\n                  centered\r\n                  destroyOnClose\r\n                  style={{\r\n                    borderRadius: '16px',\r\n                    overflow: 'hidden',\r\n                    boxShadow: '0 12px 48px rgba(0, 0, 0, 0.2)',\r\n                    maxHeight: '80vh',\r\n                    border: '1px solid #e8e8e8'\r\n                  }}\r\n                  styles={{\r\n                    header: {\r\n                      borderBottom: '2px solid #f0f0f0',\r\n                      padding: '20px 32px',\r\n                      backgroundColor: '#fafafa'\r\n                    },\r\n                    body: { \r\n                      maxHeight: '50vh', \r\n                      overflowY: 'auto',\r\n                      padding: '32px',\r\n                      fontSize: '15px',\r\n                      background: 'linear-gradient(to bottom, #ffffff, #f8fbff)'\r\n                    },\r\n                    footer: {\r\n                      borderTop: '2px solid #f0f0f0',\r\n                      padding: '10px 22px',\r\n                      display: 'flex',\r\n                      justifyContent: 'flex-end',\r\n                      gap: '16px',\r\n                      backgroundColor: '#fafafa'\r\n                    }\r\n                  }}\r\n                >\r\n                  {selectedViolation && (\r\n                    <Descriptions \r\n                      column={1} \r\n                      bordered\r\n                      labelStyle={{\r\n                        fontWeight: 600,\r\n                        color: '#2d2d2d',\r\n                        backgroundColor: '#f5f5f5',\r\n                        width: '200px',\r\n                        padding: '14px 24px',\r\n                        fontSize: '15px',\r\n                        borderRight: '1px solid #e8e8e8'\r\n                      }}\r\n                      contentStyle={{\r\n                        fontSize: '15px',\r\n                        color: '#434343',\r\n                        padding: '16px 24px',\r\n                        backgroundColor: '#ffffff',\r\n                        minHeight: '52px'\r\n                      }}\r\n                    >\r\n                      <Descriptions.Item label=\"Mã vi phạm\">\r\n                        <Tag color=\"blue\" style={{ \r\n                          fontSize: 14,\r\n                          padding: '4px 12px',\r\n                          borderRadius: '4px',\r\n                          fontWeight: 500 \r\n                        }}>\r\n                          #{selectedViolation.id}\r\n                        </Tag>\r\n                      </Descriptions.Item>\r\n                      \r\n                      <Descriptions.Item label=\"Trạng thái\">\r\n                        <Tag \r\n                          color={selectedViolation.status === \"Chưa giải quyết\" ? \"orange\" : \"green\"}\r\n                          style={{ \r\n                            fontSize: 14,\r\n                            padding: '6px 12px',\r\n                            borderRadius: '20px',\r\n                            fontWeight: 500,\r\n                            textTransform: 'uppercase'\r\n                          }}\r\n                        >\r\n                          {selectedViolation.status === \"Chưa giải quyết\" ? \"Chưa giải quyết\" : \"Đã hoàn thành\"}\r\n                        </Tag>\r\n                      </Descriptions.Item>\r\n\r\n                      <Descriptions.Item label=\"Ngày tạo\">\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                          <CalendarOutlined style={{ color: '#666' }} />\r\n                          {selectedViolation.createdAt || 'N/A'}\r\n                        </div>\r\n                      </Descriptions.Item>\r\n\r\n                      <Descriptions.Item label=\"Người thông báo\">\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                          <UserOutlined style={{ color: '#666' }} />\r\n                          {selectedViolation.notificationBy || 'N/A'}\r\n                        </div>\r\n                      </Descriptions.Item>\r\n\r\n                      {selectedViolation.status === \"Đã hoàn thành\" && (\r\n                        <>\r\n                          <Descriptions.Item label=\"Người giải quyết\">\r\n                            <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                              <UserOutlined style={{ color: '#666' }} />\r\n                              {selectedViolation.resolvedBy || 'N/A'}\r\n                            </div>\r\n                          </Descriptions.Item>\r\n\r\n                          <Descriptions.Item label=\"Thời gian giải quyết\">\r\n                            <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                              <ClockCircleOutlined style={{ color: '#666' }} />\r\n                              {formatDate(selectedViolation.resolvedAt) || 'N/A'}\r\n                            </div>\r\n                          </Descriptions.Item>\r\n                        </>\r\n                      )}\r\n\r\n                      <Descriptions.Item label=\"Thông tin thú cưng\">\r\n                        {selectedPetInViolation ? (\r\n                          <div style={{ lineHeight: 1.6 }}>\r\n                            <div>\r\n                              <EnvironmentOutlined /> Tên: {selectedPetInViolation.name || 'N/A'}\r\n                            </div>\r\n                            <div>\r\n                              <TagOutlined /> Loài: {selectedPetInViolation.species || 'N/A'}\r\n                            </div>\r\n                            <div>\r\n                              <ExperimentOutlined /> Giống: {selectedPetInViolation.breed || 'N/A'}\r\n                            </div>\r\n                          </div>\r\n                        ) : (\r\n                          <span style={{ color: '#8c8c8c' }}>Không có thông tin thú cưng</span>\r\n                        )}\r\n                        <Button \r\n                          type=\"primary\" \r\n                          ghost\r\n                          onClick={async () => {\r\n                            try {\r\n                              setLoading(true);\r\n                              // Lấy ID thú cưng từ vi phạm\r\n                              const petId = selectedViolation.petId;\r\n                              \r\n                              // Fetch thông tin thú cưng từ Firestore\r\n                              const petDoc = await getDoc(doc(db, \"pets\", petId));\r\n                              const petData = { id: petDoc.id, ...petDoc.data() } as PetType;\r\n                              \r\n                              // Fetch thông tin chủ sở hữu\r\n                              let ownerData = defaultOwner;\r\n                              if (petData.ownerId) {\r\n                                const ownerDoc = await getDoc(doc(db, \"owners\", petData.ownerId));\r\n                                ownerData = { ...defaultOwner, ...ownerDoc.data() };\r\n                              }\r\n\r\n                              // Hiển thị modal thông tin thú cưng\r\n                              setSelectedPet(petData);\r\n                              setSelectedOwner(ownerData);\r\n                              setInfoModalVisible(true);\r\n                              setViolationModalVisible(false); // Đóng modal vi phạm\r\n                            } catch (error) {\r\n                              message.error(\"Lỗi khi tải thông tin thú cưng\");\r\n                            } finally {\r\n                              setLoading(false);\r\n                            }\r\n                          }}\r\n                          style={{ \r\n                            borderRadius: '8px',\r\n                            borderColor: '#1890ff',\r\n                            color: '#1890ff',\r\n                            fontWeight: 500,\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            gap: '8px'\r\n                          }}\r\n                        >\r\n                          <ArrowRightOutlined /> Xem chi tiết\r\n                        </Button>\r\n                      </Descriptions.Item>\r\n\r\n                      <Descriptions.Item label=\"Thông tin chủ nuôi\">\r\n                        {selectedOwnerInViolation ? (\r\n                          <div style={{ lineHeight: 1.6 }}>\r\n                            <div>\r\n                              <UserOutlined /> Tên: {selectedOwnerInViolation.fullName || 'N/A'}\r\n                            </div>\r\n                            <div>\r\n                              <PhoneOutlined /> Điện thoại: {selectedOwnerInViolation.phone || 'N/A'}\r\n                            </div>\r\n                            <div>\r\n                              <HomeOutlined /> Địa chỉ: {selectedOwnerInViolation.address || 'N/A'}\r\n                            </div>\r\n                          </div>\r\n                        ) : (\r\n                          <span style={{ color: '#8c8c8c' }}>Không có thông tin chủ nuôi</span>\r\n                        )}\r\n                      </Descriptions.Item>\r\n\r\n                      <Descriptions.Item label=\"Mô tả vi phạm\">\r\n                        <div style={{ \r\n                          backgroundColor: '#fffbe6',\r\n                          padding: '16px',\r\n                          borderRadius: '8px',\r\n                          borderLeft: '4px solid #ffe58f',\r\n                          margin: '8px 0'\r\n                        }}>\r\n                          {selectedViolation.description || <span style={{ color: '#bfbfbf' }}>N/A</span>}\r\n                        </div>\r\n                      </Descriptions.Item>\r\n\r\n                      <Descriptions.Item label=\"Ghi chú\">\r\n                        <div style={{ \r\n                          padding: '12px',\r\n                          backgroundColor: '#f8f8f8',\r\n                          borderRadius: '6px',\r\n                          fontStyle: 'italic'\r\n                        }}>\r\n                          {selectedViolation.notes || <span style={{ color: '#bfbfbf' }}>Không có ghi chú</span>}\r\n                        </div>\r\n                      </Descriptions.Item>\r\n\r\n                      <Descriptions.Item label=\"Địa điểm vi phạm\">\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                          <EnvironmentOutlined style={{ color: '#666' }} />\r\n                          {selectedViolation.violationLocation || 'N/A'}\r\n                        </div>\r\n                      </Descriptions.Item>\r\n\r\n                      <Descriptions.Item label=\"Thời gian vi phạm\">\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                          <ClockCircleOutlined style={{ color: '#666' }} />\r\n                          {formatDate(selectedViolation.violationTime) || 'N/A'}\r\n                        </div>\r\n                      </Descriptions.Item>\r\n\r\n                      <Descriptions.Item label=\"Hình ảnh đính kèm\">\r\n                        <div style={{ \r\n                          display: 'grid', \r\n                          gridTemplateColumns: 'repeat(auto-fill, minmax(150px, 1fr))',\r\n                          gap: '16px',\r\n                          padding: '8px 0'\r\n                        }}>\r\n                          {selectedViolation.attachments?.length ? \r\n                            selectedViolation.attachments.map((img: string, index: number) => (\r\n                              <Image\r\n                                key={index}\r\n                                width={150}\r\n                                height={150}\r\n                                src={img}\r\n                                style={{ \r\n                                  borderRadius: '12px',\r\n                                  border: '1px solid #f0f0f0',\r\n                                  boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\r\n                                  transition: 'transform 0.2s',\r\n                                  cursor: 'pointer',\r\n                                  objectFit: 'cover',\r\n                                  aspectRatio: '1'\r\n                                }}\r\n                                preview={{\r\n                                  maskStyle: { \r\n                                    borderRadius: '8px',\r\n                                    backgroundColor: 'rgba(0,0,0,0.2)'\r\n                                  }\r\n                                }}\r\n                                alt={`Ảnh vi phạm ${index + 1}`}\r\n                              />\r\n                            )) : \r\n                            <div style={{ \r\n                              display: 'flex', \r\n                              alignItems: 'center', \r\n                              gap: '8px', \r\n                              color: '#8c8c8c', \r\n                              fontStyle: 'italic'\r\n                            }}>\r\n                              <PictureOutlined /> Không có hình ảnh\r\n                            </div>\r\n                          }\r\n                        </div>\r\n                      </Descriptions.Item>\r\n\r\n                    </Descriptions>\r\n                  )}\r\n                </Modal>\r\n\r\n                <Modal\r\n                  title={\r\n                    <span style={{\r\n                      fontSize: '22px',\r\n                      fontWeight: 700,\r\n                      color: '#1890ff',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      gap: '8px'\r\n                    }}>\r\n                      <FileTextOutlined /> Chi tiết tiêm phòng\r\n                    </span>\r\n                  }\r\n                  open={vaccinationModalVisible}\r\n                  onCancel={() => setVaccinationModalVisible(false)}\r\n                  footer={selectedVaccination?.status === \"Pending\" ? [\r\n                    <Button\r\n                      key=\"confirm-vaccinated\"\r\n                      type=\"primary\"\r\n                      style={{ \r\n                        backgroundColor: '#52c41a',\r\n                        borderColor: '#52c41a',\r\n                        fontWeight: 600,\r\n                        boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\r\n                        borderRadius: '6px',\r\n                        padding: '0 24px',\r\n                        height: '40px',\r\n                        transition: 'all 0.3s',\r\n                      }}\r\n                      onClick={async () => {\r\n                        try {\r\n                          const now = new Date();\r\n                          const formattedDate = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}-${String(now.getDate()).padStart(2, '0')}T${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}:${String(now.getSeconds()).padStart(2, '0')}`;\r\n                          \r\n                          // Lấy vaccination document\r\n                          const vaccinationRef = doc(db, \"vaccinations\", selectedVaccination.id);\r\n                          const vaccinationSnap = await getDoc(vaccinationRef);\r\n                          if (!vaccinationSnap.exists()) {\r\n                            message.error(\"Không tìm thấy dữ liệu tiêm phòng!\");\r\n                            return;\r\n                          }\r\n                  \r\n                          const data = vaccinationSnap.data();\r\n                          const updatedSenderTo = (data.senderTo || []).map((entry: any) => {\r\n                            if (entry.userId === selectedVaccination.userId) {\r\n                              return {\r\n                                ...entry,\r\n                                status: \"Active\",\r\n                                resolvedAt: formattedDate,\r\n                                resolvedBy: localStorage.getItem('email') || 'Unknown'\r\n                              };\r\n                            }\r\n                            return entry;\r\n                          });                          \r\n                  \r\n                          await updateDoc(vaccinationRef, {\r\n                            senderTo: updatedSenderTo\r\n                          });                          \r\n                  \r\n                          message.success(\"Đã xác nhận hoàn thành tiêm phòng!\");\r\n                          setVaccinationModalVisible(false);\r\n                        } catch (error) {\r\n                          message.error(\"Lỗi khi cập nhật trạng thái tiêm phòng\");\r\n                        }\r\n                      }}\r\n                    >\r\n                      <CheckCircleOutlined /> Xác nhận đã tiêm\r\n                    </Button>\r\n                  ] : null}                  \r\n                  width={window.innerWidth < 768 ? '90%' : 800}\r\n                  centered\r\n                  destroyOnClose\r\n                  style={{\r\n                    borderRadius: '16px',\r\n                    overflow: 'hidden',\r\n                    boxShadow: '0 12px 48px rgba(0, 0, 0, 0.2)',\r\n                    maxHeight: '80vh',\r\n                    border: '1px solid #e8e8e8'\r\n                  }}\r\n                  styles={{\r\n                    header: {\r\n                      borderBottom: '2px solid #f0f0f0',\r\n                      padding: '20px 32px',\r\n                      backgroundColor: '#fafafa'\r\n                    },\r\n                    body: { \r\n                      maxHeight: '50vh', \r\n                      overflowY: 'auto',\r\n                      padding: '32px',\r\n                      fontSize: '15px',\r\n                      background: 'linear-gradient(to bottom, #ffffff, #f8fbff)'\r\n                    },\r\n                    footer: {\r\n                      borderTop: '2px solid #f0f0f0',\r\n                      padding: '10px 22px',\r\n                      display: 'flex',\r\n                      justifyContent: 'flex-end',\r\n                      gap: '16px',\r\n                      backgroundColor: '#fafafa'\r\n                    }\r\n                  }}\r\n                >\r\n                  {selectedVaccination && (\r\n                    <Descriptions\r\n                      column={1}\r\n                      bordered\r\n                      labelStyle={{\r\n                        fontWeight: 600,\r\n                        color: '#2d2d2d',\r\n                        backgroundColor: '#f5f5f5',\r\n                        width: '200px',\r\n                        padding: '14px 24px',\r\n                        fontSize: '15px',\r\n                        borderRight: '1px solid #e8e8e8'\r\n                      }}\r\n                      contentStyle={{\r\n                        fontSize: '15px',\r\n                        color: '#434343',\r\n                        padding: '16px 24px',\r\n                        backgroundColor: '#ffffff',\r\n                        minHeight: '52px'\r\n                      }}\r\n                    >\r\n                      {/* Mã yêu cầu */}\r\n                      <Descriptions.Item label=\"Mã tiêm phòng\">\r\n                        <Tag color=\"blue\" style={{\r\n                          fontSize: 14,\r\n                          padding: '4px 12px',\r\n                          borderRadius: '4px',\r\n                          fontWeight: 500\r\n                        }}>\r\n                          #{selectedVaccination.id}\r\n                        </Tag>\r\n                      </Descriptions.Item>\r\n\r\n                      {/* Trạng thái riêng biệt */}\r\n                      <Descriptions.Item label=\"Trạng thái\">\r\n                        <Tag\r\n                          color={selectedVaccination.status === \"Pending\" ? \"orange\" : \"green\"}\r\n                          style={{\r\n                            fontSize: 14,\r\n                            padding: '6px 12px',\r\n                            borderRadius: '20px',\r\n                            fontWeight: 500,\r\n                            textTransform: 'uppercase'\r\n                          }}\r\n                        >\r\n                          {selectedVaccination.status === \"Pending\" ? \"Chưa giải quyết\" : \"Đã hoàn thành\"}\r\n                        </Tag>\r\n                      </Descriptions.Item>\r\n\r\n                      {/* Thông tin thời gian và người thông báo */}\r\n                      <Descriptions.Item label=\"Ngày tạo\">\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                          <CalendarOutlined style={{ color: '#666' }} />\r\n                          {selectedVaccination.createdAt || 'N/A'}\r\n                        </div>\r\n                      </Descriptions.Item>\r\n\r\n                      <Descriptions.Item label=\"Người thông báo\">\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                          <UserOutlined style={{ color: '#666' }} />\r\n                          {selectedVaccination.notificationBy || 'N/A'}\r\n                        </div>\r\n                      </Descriptions.Item>\r\n\r\n                      {selectedVaccination.status === \"Active\" && (\r\n                        <>\r\n                          <Descriptions.Item label=\"Người xác nhận\">\r\n                            <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                              <UserOutlined style={{ color: '#666' }} />\r\n                              {selectedVaccination.resolvedBy || 'N/A'}\r\n                            </div>\r\n                          </Descriptions.Item>\r\n\r\n                          <Descriptions.Item label=\"Thời gian xác nhận\">\r\n                            <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                              <ClockCircleOutlined style={{ color: '#666' }} />\r\n                              {formatDate(selectedVaccination.resolvedAt) || 'N/A'}\r\n                            </div>\r\n                          </Descriptions.Item>\r\n                        </>\r\n                      )}\r\n\r\n                      {/* Thông tin thú cưng */}\r\n                      <Descriptions.Item label=\"Thông tin thú cưng\">\r\n                        {selectedPetInVaccination ? (\r\n                          <div style={{ lineHeight: 1.6 }}>\r\n                            <div>\r\n                              <EnvironmentOutlined /> Tên: {selectedPetInVaccination.name || 'N/A'}\r\n                            </div>\r\n                            <div>\r\n                              <TagOutlined /> Loài: {selectedPetInVaccination.species || 'N/A'}\r\n                            </div>\r\n                            <div>\r\n                              <ExperimentOutlined /> Giống: {selectedPetInVaccination.breed || 'N/A'}\r\n                            </div>\r\n                            <Button \r\n                              type=\"primary\" \r\n                              ghost\r\n                              onClick={async () => {\r\n                                try {\r\n                                  setLoading(true);\r\n                                  const petId = selectedPetInVaccination.id;\r\n                                  const petDoc = await getDoc(doc(db, \"pets\", petId));\r\n                                  const petData = { id: petDoc.id, ...petDoc.data() } as PetType;\r\n\r\n                                  let ownerData = defaultOwner;\r\n                                  if (petData.ownerId) {\r\n                                    const ownerDoc = await getDoc(doc(db, \"owners\", petData.ownerId));\r\n                                    ownerData = { ...defaultOwner, ...ownerDoc.data() };\r\n                                  }\r\n\r\n                                  setSelectedPet(petData);\r\n                                  setSelectedOwner(ownerData);\r\n                                  setInfoModalVisible(true);\r\n                                  setVaccinationModalVisible(false);\r\n                                } catch (error) {\r\n                                  message.error(\"Lỗi khi tải thông tin thú cưng\");\r\n                                } finally {\r\n                                  setLoading(false);\r\n                                }\r\n                              }}\r\n                              style={{\r\n                                marginTop: 8,\r\n                                borderRadius: 8,\r\n                                borderColor: '#1890ff',\r\n                                color: '#1890ff',\r\n                                fontWeight: 500,\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                gap: 8\r\n                              }}\r\n                            >\r\n                              <ArrowRightOutlined /> Xem chi tiết\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <span style={{ color: '#8c8c8c', fontStyle: 'italic' }}>Không có thông tin thú cưng</span>\r\n                        )}\r\n                      </Descriptions.Item>\r\n\r\n                      {/* Thông tin chủ nuôi */}\r\n                      <Descriptions.Item label=\"Thông tin chủ nuôi\">\r\n                        {selectedOwnerInVaccination ? (\r\n                          <div style={{ lineHeight: 1.6 }}>\r\n                            <div>\r\n                              <UserOutlined /> Tên: {selectedOwnerInVaccination.fullName || 'N/A'}\r\n                            </div>\r\n                            <div>\r\n                              <PhoneOutlined /> Điện thoại: {selectedOwnerInVaccination.phone || 'N/A'}\r\n                            </div>\r\n                            <div>\r\n                              <HomeOutlined /> Địa chỉ: {selectedOwnerInVaccination.address || 'N/A'}\r\n                            </div>\r\n                          </div>\r\n                        ) : (\r\n                          <span style={{ color: '#8c8c8c' }}>Không có thông tin chủ nuôi</span>\r\n                        )}\r\n                      </Descriptions.Item>\r\n\r\n                      <Descriptions.Item label=\"Thời gian (từ ngày)\">\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                          <ClockCircleOutlined style={{ color: '#666' }} />\r\n                          {selectedVaccination.timeFrom || 'N/A'}\r\n                        </div>\r\n                      </Descriptions.Item>\r\n\r\n                      <Descriptions.Item label=\"Thời gian (đến ngày)\">\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                          <ClockCircleOutlined style={{ color: '#666' }} />\r\n                          {selectedVaccination.timeTo || 'N/A'}\r\n                        </div>\r\n                      </Descriptions.Item>\r\n\r\n                      {/* Thông tin vaccine */}\r\n                      <Descriptions.Item label=\"Địa điểm tiêm\">\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                          <EnvironmentOutlined style={{ color: '#666' }} />\r\n                          {selectedVaccination.vaccineLocation || 'N/A'}\r\n                        </div>\r\n                      </Descriptions.Item>\r\n\r\n                      <Descriptions.Item label=\"Cơ quan ban hành\">\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                          <HomeOutlined style={{ color: '#666' }} />\r\n                          {selectedVaccination.issuingAuthority || 'N/A'}\r\n                        </div>\r\n                      </Descriptions.Item>\r\n\r\n                      <Descriptions.Item label=\"Loại vaccine\">\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                          <TagOutlined style={{ color: '#666' }} />\r\n                          {selectedVaccination.vaccineType || 'Không có'}\r\n                        </div>\r\n                      </Descriptions.Item>\r\n\r\n                      <Descriptions.Item label=\"Chi phí\">\r\n                        {selectedVaccination.cost ? `${selectedVaccination.cost} VNĐ` : 'Không có'}\r\n                      </Descriptions.Item>\r\n\r\n                      <Descriptions.Item label=\"Ghi chú\">\r\n                        <div style={{\r\n                          padding: '12px',\r\n                          backgroundColor: '#f8f8f8',\r\n                          borderRadius: '6px',\r\n                          fontStyle: 'italic'\r\n                        }}>\r\n                          {selectedVaccination.notes || <span style={{ color: '#bfbfbf' }}>Không có ghi chú</span>}\r\n                        </div>\r\n                      </Descriptions.Item>\r\n                \r\n                    </Descriptions>\r\n                  )}\r\n                </Modal>\r\n            </Spin>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </RequestLayout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  tab: state.request.tab,\r\n  status: state.request.status,\r\n  userInfo: state.request.userInfo\r\n})\r\n\r\nconst mapDispatchToProps = { setTab, setStatus }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageRequest)"],"names":["Text","Typography","useBreakpoint","Grid","_ref","petId","petName","open","onCancel","onViewVaccinationDetail","vaccines","setVaccines","useState","loading","setLoading","screens","formatDate","date","isNaN","getTime","_jsx","type","children","datePart","toLocaleDateString","day","month","year","timePart","toLocaleTimeString","hour","minute","_jsxs","style","display","flexDirection","CalendarOutlined","marginRight","marginLeft","useEffect","unsubscribe","fetchVaccinations","onSnapshot","collection","db","snapshot","items","forEach","doc","data","createdAtRaw","createdAt","Timestamp","toDate","Date","Array","isArray","senderTo","entry","_entry$userId","userIdParts","userId","split","length","push","id","vaccineType","status","error","console","Modal","title","footer","width","xs","top","maxWidth","styles","body","maxHeight","overflowY","padding","Spin","spinning","Descriptions","bordered","column","size","labelStyle","map","vaccine","Item","label","md","flexWrap","gap","cursor","onClick","requestCode","createdBy","lastModifiedBy","lastUpdateTime","flex","strong","Tag","color","borderRadius","textAlign","visible","pet","owner","onViewViolationDetail","setViolationModalVisible","setSelectedViolation","violationModalVisible","setSelectedVaccination","setVaccinationModalVisible","violationPetModalVisible","setViolationPetModalVisible","violations","setViolations","violationsLoading","setViolationsLoading","vaccinationModalOpen","setVaccinationModalOpen","currentVaccinationStatus","setCurrentVaccinationStatus","vaccinationStatus","currentViolationStatus","setCurrentViolationStatus","violationStatus","renderGenderTag","gender","validGender","text","male","female","textTransform","dateString","className","formatDateViolation","fetchViolations","async","q","query","where","violationsData","getDocs","docs","violationTime","description","checkAndUpdateViolationStatus","message","newStatus","some","v","updateDoc","violationsRef","checkAndUpdateVaccinationStatus","vaccinationsSnapshot","hasEntries","allActive","content","centered","destroyOnClose","Card","flexShrink","cover","imageUrl","Image","src","alt","height","preview","objectFit","fontWeight","contentStyle","span","name","_Fragment","species","breed","age","Button","marginTop","healthStatus","lastCheckHealthDate","handleShowViolations","violation","setTimeout","lastViolationDate","VaccinationHistoryModal","lastVaccineDate","fullName","phone","email","cccd","sex","birthday","address","statusMapping","Search","Input","mapDispatchToProps","setTab","setStatus","connect","state","tab","request","userInfo","props","requestData","setRequestData","navigate","useNavigate","searchQuery","setSearchQuery","form","Form","useForm","filteredData","setFilteredData","isModalVisible","setIsModalVisible","selectedRequest","setSelectedRequest","infoModalVisible","setInfoModalVisible","selectedPet","setSelectedPet","selectedOwner","setSelectedOwner","petRequests","setPetRequests","deviceRequests","setDeviceRequests","violationRequests","setViolationRequests","vaccinationRequests","setVaccinationRequests","selectedViolation","selectedPetInViolation","setSelectedPetInViolation","selectedOwnerInViolation","setSelectedOwnerInViolation","vaccinationModalVisible","selectedVaccination","selectedPets","setSelectedPets","selectedOwnerVaccination","setSelectedOwnerVaccination","selectedPetInVaccination","setSelectedPetInVaccination","selectedOwnerInVaccination","setSelectedOwnerInVaccination","pagination","setPagination","current","pageSize","total","defaultOwner","updateAt","handleVaccinationClick","vaccinationId","rest","record","join","vaccinationDoc","getDoc","exists","vaccinationData","statusDisplay","userEntry","find","u","vaccinationWithId","resolvedAt","resolvedBy","timeFrom","timeTo","vaccineLocation","issuingAuthority","cost","notes","ownerId","petQuery","pets","petDoc","petData","ownerDoc","handleViolationClick","violationDoc","violationData","violationWithId","attachments","handlePageChange","page","prev","violationsQuery","unsubscribeViolations","querySnapshot","handlerBy","updatedAt","notificationBy","violationLocation","vaccinationsQuery","unsubscribeVaccinations","vaccinationsData","user","petsQuery","unsubscribePets","petsData","rfidReaderId","devicesQuery","unsubscribeDevices","devicesData","deviceData","createAt","deviceStatus","parseDate","dateStr","finalData","filtered","filter","item","statusKey","filterData","sort","a","b","dateA","_date$toDate","dateObj","call","columns","dataIndex","key","render","Tooltip","whiteSpace","wordBreak","lineHeight","replace","overlayStyle","e","stopPropagation","sorter","lowerQuery","toLowerCase","safeString","str","field","includes","handleOk","values","validateFields","ageValue","Number","roundedAge","Math","round","getLocalTimestamp","now","pad","n","toString","padStart","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","userEmail","localStorage","getItem","currentTime","timeFields","petRef","success","resetFields","handleCancel","owners","setOwners","ownerData","handleRowClick","source","arguments","undefined","notiQuery","notiSnapshot","notiDoc","RequestLayout","profile","onRowClick","_selectedViolation$at","overflowX","Space","Compact","placeholder","value","onChange","target","onSearch","enterButton","backgroundColor","fontFamily","PlusOutlined","Table","rowKey","dataSource","position","margin","showSizeChanger","responsive","pageSizeOptions","onShowSizeChange","showTotal","range","scroll","x","onRow","PetInfoModal","vaccination","onOk","okText","cancelText","window","innerWidth","overflow","boxShadow","header","borderBottom","fontSize","borderTop","layout","marginBottom","rules","required","max","border","Select","dropdownStyle","Option","alignItems","min","InputNumber","formatter","setFieldsValue","TextArea","rows","resize","minHeight","showSearch","optionFilterProp","filterOption","input","option","_option$label","options","FileTextOutlined","borderColor","transition","formattedDate","String","CheckCircleOutlined","background","justifyContent","borderRight","UserOutlined","ClockCircleOutlined","EnvironmentOutlined","TagOutlined","ExperimentOutlined","ghost","ArrowRightOutlined","PhoneOutlined","HomeOutlined","borderLeft","fontStyle","gridTemplateColumns","img","index","aspectRatio","maskStyle","PictureOutlined","vaccinationRef","vaccinationSnap","updatedSenderTo"],"sourceRoot":""}