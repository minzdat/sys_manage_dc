{"version":3,"file":"static/js/855.4feb7566.chunk.js","mappings":"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","sources":["Pages/Login/Login.tsx","Firebase/FirebaseConfig.ts"],"sourcesContent":["import { Input, Button, Form, message, Spin } from \"antd\";\r\nimport {Link, useNavigate } from \"react-router-dom\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { signOut, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth } from \"../../Firebase/FirebaseConfig\";\r\nimport \"./index.css\";\r\nimport { getDocs, collection, query, where, limit } from \"firebase/firestore\";\r\nimport { db } from \"../../Firebase/FirebaseConfig\"; \r\n\r\ninterface LoginValues {\r\n  username: string; // Email\r\n  password: string;\r\n}\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Xử lý khi đăng nhập thành công\r\n  const handleSuccessLogin = async (user: any) => {\r\n    const token = await user.getIdToken();\r\n    const userEmail = user.email || \"\"; // Handle case email null\r\n    \r\n    localStorage.setItem(\"Token\", token);\r\n    localStorage.setItem(\"Id\", user.uid);\r\n    localStorage.setItem(\"email\", userEmail); // Lưu email\r\n    \r\n    message.success(\"Đăng nhập thành công!\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const checkUserStatusAndRole = async (\r\n    email: string\r\n  ): Promise<{ status: string; role: string } | null> => {\r\n    const colNames = [\"owners\", \"managers\", \"admins\"] as const;\r\n    for (const name of colNames) {\r\n      const q = query(\r\n        collection(db, name),\r\n        where(\"email\", \"==\", email),\r\n        limit(1)\r\n      );\r\n      const snap = await getDocs(q);\r\n      if (!snap.empty) {\r\n        const data = snap.docs[0].data();\r\n        return {\r\n          status: data.status as string, // ví dụ \"Active\", \"Inactive\"\r\n          role: name,\r\n        };\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n  \r\n  const handleLogIn = useCallback(async (values: LoginValues) => {\r\n    setLoading(true);\r\n    try {\r\n      const { username, password } = values;\r\n      // 1) Đăng nhập bằng Firebase Auth\r\n      const userCredential = await signInWithEmailAndPassword(auth, username, password);\r\n      const user = userCredential.user;\r\n\r\n      // 2) Kiểm tra status trong Firestore\r\n      const email = user.email || \"\";\r\n      const info = await checkUserStatusAndRole(email);\r\n\r\n      if (!info) {\r\n        // không tìm thấy trong bất kỳ collection nào\r\n        await signOut(auth);\r\n        message.error(\"Tài khoản không hợp lệ.\");\r\n        return;\r\n      }\r\n      const { status, role } = info;\r\n\r\n      if (status !== \"Active\") {\r\n        // nếu không active thì sign out và báo lỗi\r\n        await signOut(auth);\r\n        message.error(\r\n          \"Tài khoản của bạn chưa được kích hoạt. Vui lòng liên hệ quản trị viên.\"\r\n        );\r\n        return;\r\n      }\r\n\r\n      // 3) Nếu active, lưu thêm role rồi tiếp tục\r\n      localStorage.setItem(\"role\", role);\r\n      await handleSuccessLogin(user);\r\n    } catch (error: any) {\r\n      let errorMsg = \"Đăng nhập thất bại!\";\r\n      \r\n      if (error.code) {\r\n        switch (error.code) {\r\n          case \"auth/user-not-found\":\r\n            errorMsg = \"Không tìm thấy tài khoản!\";\r\n            break;\r\n          case \"auth/wrong-password\":\r\n            errorMsg = \"Mật khẩu không chính xác!\";\r\n            break;\r\n          case \"auth/invalid-email\":\r\n            errorMsg = \"Địa chỉ email không hợp lệ!\";\r\n            break;\r\n          case \"auth/invalid-credential\":\r\n            errorMsg = \"Thông tin đăng nhập không hợp lệ. Vui lòng kiểm tra lại tài khoản hoặc mật khẩu!\";\r\n            break;\r\n          case \"auth/user-disabled\":\r\n            errorMsg = \"Tài khoản này đã bị vô hiệu hóa. Vui lòng liên hệ quản trị viên.\";\r\n            break;\r\n          case \"auth/too-many-requests\":\r\n            errorMsg = \"Bạn đã thử quá nhiều lần. Vui lòng chờ vài phút rồi thử lại.\";\r\n            break;\r\n          case \"auth/network-request-failed\":\r\n            errorMsg = \"Không thể kết nối mạng. Vui lòng kiểm tra đường truyền Internet.\";\r\n            break;\r\n          default:\r\n            errorMsg = `Lỗi đăng nhập: ${error.message || \"Không xác định\"}`;\r\n            break;\r\n        }\r\n      }\r\n      message.error(errorMsg);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n}, [navigate]);\r\n\r\n  return (\r\n    <Spin spinning={loading} size=\"large\">\r\n      <div className=\"login-page\">\r\n        <h2>Đăng nhập vào tài khoản của bạn</h2>\r\n        <br />\r\n        <Form\r\n          className=\"login-form\"\r\n          name=\"login\"\r\n          labelCol={{ span: 8 }}\r\n          wrapperCol={{ span: 16 }}\r\n          style={{ maxWidth: 600 }}\r\n          onFinish={handleLogIn}\r\n        >\r\n          <Form.Item\r\n            label=\"Email\"\r\n            name=\"username\"\r\n            rules={[\r\n              { required: true, message: \"Vui lòng nhập email của bạn!\" },\r\n              { type: \"email\", message: \"Email không hợp lệ!\" },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Nhập email của bạn\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Mật khẩu\"\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Vui lòng nhập mật khẩu của bạn!\" }]}\r\n          >\r\n            <Input.Password placeholder=\"Nhập mật khẩu của bạn\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              id=\"btn-login\"\r\n              loading={loading}\r\n            >\r\n              Đăng nhập\r\n            </Button>\r\n            <div style={{ marginTop: 10, marginRight: 10 }}>\r\n              Chưa có tài khoản? <Link to=\"/register\">Đăng ký ngay</Link>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </Spin>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// src/Firebase/FirebaseConfig.ts\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBUJOR0UXP-MsHvzblD7mLsWQAOSjNyYFQ\",\r\n  authDomain: \"sys-manage-dc-9c480.firebaseapp.com\",\r\n  databaseURL: \"https://sys-manage-dc-9c480-default-rtdb.firebaseio.com\",\r\n  projectId: \"sys-manage-dc-9c480\",\r\n  storageBucket: \"sys-manage-dc-9c480.firebasestorage.app\",\r\n  messagingSenderId: \"573023439455\",\r\n  appId: \"1:573023439455:web:ee42e43973d02e2c79a9ea\",\r\n  measurementId: \"G-DW576LW9W3\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\nconst db = getFirestore(app);\r\nconst analytics = getAnalytics(app);\r\n\r\nexport { auth, db }; "],"names":["Login","navigate","useNavigate","loading","setLoading","useState","handleLogIn","useCallback","async","username","password","values","user","signInWithEmailAndPassword","auth","email","info","colNames","name","q","query","collection","db","where","limit","snap","getDocs","empty","status","docs","data","role","checkUserStatusAndRole","signOut","message","error","localStorage","setItem","token","getIdToken","userEmail","uid","success","handleSuccessLogin","errorMsg","code","_jsx","Spin","spinning","size","children","_jsxs","className","Form","labelCol","span","wrapperCol","style","maxWidth","onFinish","Item","label","rules","required","type","Input","placeholder","Password","offset","Button","htmlType","id","marginTop","marginRight","Link","to","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","getFirestore","getAnalytics"],"sourceRoot":""}