{"version":3,"file":"static/js/883.1ccbc9d2.chunk.js","mappings":"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","sources":["Firebase/FirebaseConfig.ts","Pages/Register/Register.tsx"],"sourcesContent":["// src/Firebase/FirebaseConfig.ts\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBUJOR0UXP-MsHvzblD7mLsWQAOSjNyYFQ\",\r\n  authDomain: \"sys-manage-dc-9c480.firebaseapp.com\",\r\n  databaseURL: \"https://sys-manage-dc-9c480-default-rtdb.firebaseio.com\",\r\n  projectId: \"sys-manage-dc-9c480\",\r\n  storageBucket: \"sys-manage-dc-9c480.firebasestorage.app\",\r\n  messagingSenderId: \"573023439455\",\r\n  appId: \"1:573023439455:web:ee42e43973d02e2c79a9ea\",\r\n  measurementId: \"G-DW576LW9W3\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\nconst db = getFirestore(app);\r\nconst analytics = getAnalytics(app);\r\n\r\nexport { auth, db }; ","import { Input, Button, Form, Radio, message, DatePicker, Select } from \"antd\";\r\nimport \"./index.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\n// import request from \"../../Utils/request\";\r\nimport { auth, db } from \"../../Firebase/FirebaseConfig\"; \r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { doc, setDoc, serverTimestamp } from \"firebase/firestore\";\r\nimport moment from \"moment\";\r\nimport dayjs from 'dayjs';\r\n\r\ninterface RegisterValues {\r\n    email: string;\r\n    password: string;\r\n    fullName: string;\r\n    sex: boolean;\r\n    birthday: moment.Moment;\r\n    phone: string;\r\n    address: string;\r\n    cccd: string;\r\n    role: string;\r\n}\r\n\r\ninterface Role {\r\n    Id: string;\r\n    Title: string;\r\n}  \r\n\r\nconst Register = () => {\r\n    const navigate = useNavigate();\r\n    const [dataRole, setDataRole] = useState<Role[]>([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleRegister = async (values: RegisterValues) => {\r\n        setLoading(true);\r\n        try {\r\n            // 1. Tạo tài khoản Authentication\r\n            const userCredential = await createUserWithEmailAndPassword(\r\n                auth,\r\n                values.email,\r\n                values.password\r\n            );\r\n\r\n            // 2. Chuyển đổi ngày sinh sang Date\r\n            const formattedBirthday = values.birthday.format(\"YYYY-MM-DDTHH:mm:ss\");\r\n            const currentTime = dayjs().format(\"YYYY-MM-DDTHH:mm:ss\");\r\n\r\n            // 3. Xác định collection và document ID\r\n            const collectionName = values.role === 'user' ? 'owners' : 'managers';\r\n            const docId = `${collectionName.slice(0, -1)}_${values.cccd}`; // owner_xxx hoặc manager_xxx\r\n\r\n            // 4. Xác định lastModifiedBy theo collection\r\n            const lastModifiedBy = `${collectionName.slice(0, -1)}_${values.cccd}`; // VD: owner_123456789\r\n            const status = values.role === 'user' ? 'Active' : 'Processing';\r\n\r\n            // 5. Chuẩn bị dữ liệu cho Firestore\r\n            const userData = {\r\n                email: values.email,\r\n                fullName: values.fullName,\r\n                sex: values.sex,\r\n                birthday: formattedBirthday,\r\n                phone: values.phone,\r\n                address: values.address,\r\n                cccd: values.cccd,\r\n                lastModifiedBy: lastModifiedBy,\r\n                createAt: currentTime,\r\n                updateAt: currentTime,\r\n                status: status\r\n            };\r\n\r\n            // 6. Lưu thông tin vào Firestore\r\n            await setDoc(doc(db, collectionName, docId), userData);\r\n\r\n            message.success('Đăng ký thành công!');\r\n            navigate('/login');\r\n        } catch (error: any) {\r\n            console.error('Lỗi đăng ký:', error);\r\n            \r\n            let errorMessage = 'Đăng ký thất bại!';\r\n            switch (error.code) {\r\n                case 'auth/email-already-in-use':\r\n                    errorMessage = 'Email đã được sử dụng';\r\n                    break;\r\n                case 'auth/weak-password':\r\n                    errorMessage = 'Mật khẩu tối thiểu 6 ký tự';\r\n                    break;\r\n                case 'permission-denied':\r\n                    errorMessage = 'Không có quyền thực hiện hành động này';\r\n                    break;\r\n                default:\r\n                    errorMessage = error.message || errorMessage;\r\n            }\r\n            message.error(errorMessage);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // const getAllRole = async () => {\r\n    //     const endpoint = \"role/all?page=1&limit=5\";\r\n    //     await request.get(endpoint).then((res) => {\r\n    //         setDataRole(res.data.Data.ListData);\r\n    //         setLoading(false);\r\n    //     }).catch(() => {\r\n    //         setLoading(true);\r\n    //     });\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     getAllRole();\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        const mockRoles: Role[] = [\r\n          { Id: \"user\", Title: \"Người dùng\" },\r\n          { Id: \"manager\", Title: \"Cơ quan quản lý\" },\r\n        ];\r\n        setDataRole(mockRoles);\r\n      }, []);\r\n      \r\n\r\n    return (\r\n        <>\r\n            <div className=\"register-page\">\r\n                <h2>Đăng ký tài khoản</h2>\r\n                <Form className=\"register-form\"\r\n                    name=\"basic\"\r\n                    labelCol={{\r\n                        span: 8,\r\n                    }}\r\n                    wrapperCol={{\r\n                        span: 18,\r\n                    }}\r\n                    style={{\r\n                        maxWidth: 600,\r\n                    }}\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    autoComplete=\"off\"\r\n                    onFinish={handleRegister}\r\n                >\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        label=\"E-mail\"\r\n                        rules={[\r\n                            {\r\n                                type: \"email\",\r\n                                message: \"Email không hợp lệ!\",\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: \"Vui lòng nhập email!\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"Nhập email của bạn\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Họ và tên\"\r\n                        name=\"fullName\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Vui lòng nhập đầy đủ họ tên của bạn!\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"Nhập họ và tên của bạn\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"sex\"\r\n                        label=\"Giới tính\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Vui lòng chọn giới tính!\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Radio.Group>\r\n                            <Radio value={true}>Nam</Radio>\r\n                            <Radio value={false}>Nữ</Radio>\r\n                        </Radio.Group>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"birthday\"\r\n                        label=\"Ngày sinh\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Vui lòng chọn ngày sinh!\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" placeholder=\"Chọn ngày sinh\"/>\r\n                    </Form.Item>\r\n                    \r\n                    <Form.Item\r\n                        name=\"phone\"\r\n                        label=\"Số điện thoại\"\r\n                        rules={[\r\n                            { required: true, message: \"Vui lòng nhập số điện thoại!\" },\r\n                            { pattern: /^[0-9]{10}$/, message: \"Số điện thoại phải có 10 chữ số!\" }\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"Nhập số điện thoại của bạn\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"address\"\r\n                        label=\"Địa chỉ\"\r\n                        rules={[{ required: true, message: \"Vui lòng nhập địa chỉ!\" }]}\r\n                    >\r\n                        <Input placeholder=\"Nhập địa chỉ của bạn\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"cccd\"\r\n                        label=\"Số CCCD\"\r\n                        rules={[\r\n                            { required: true, message: \"Vui lòng nhập số CCCD!\" },\r\n                            { pattern: /^[0-9]{12}$/, message: \"Số CCCD phải có 12 chữ số!\" }\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"Nhập số căn cước công dân\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item \r\n                    name=\"role\" \r\n                    label=\"Vai trò\" \r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Vui lòng chọn vai trò!\",\r\n                        },\r\n                    ]}\r\n                    initialValue={dataRole.length > 0 ? dataRole[0].Title : undefined}>\r\n                        <Select\r\n                            placeholder=\"Chọn vai trò của bạn\"\r\n                            showSearch\r\n                            optionFilterProp=\"children\"\r\n                            filterOption={(inputValue, option) =>\r\n                                option?.props.children?.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1\r\n                            }\r\n                        >\r\n                            {dataRole.map((items) => (\r\n                                <Select.Option key={items.Id} value={items.Id} >\r\n                                    {`${items.Title}`}\r\n                                </Select.Option>\r\n                            ))}\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    {/* <Form.Item  //Test register\r\n                        label=\"Employee number\"\r\n                        name=\"employeenumber\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input your employee number!\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"Type your employee number\" />\r\n                    </Form.Item> */}\r\n\r\n                    <Form.Item\r\n                        label=\"Mật khẩu\"\r\n                        name=\"password\"\r\n                        hasFeedback\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Vui lòng nhập mật khẩu!\",\r\n                            },\r\n                            {\r\n                                min: 6,\r\n                                message: \"Mật khẩu tối thiểu 6 ký tự!\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password placeholder=\"Nhập mật khẩu\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"confirm\"\r\n                        label=\"Xác nhận mật khẩu\"\r\n                        dependencies={[\"password\"]}\r\n                        hasFeedback\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Vui lòng xác nhận mật khẩu!\",\r\n                            },\r\n                            ({ getFieldValue }) => ({\r\n                                validator(_, value) {\r\n                                    if (!value || getFieldValue(\"password\") === value) {\r\n                                        return Promise.resolve();\r\n                                    }\r\n                                    return Promise.reject(\r\n                                        new Error(\r\n                                            \"Mật khẩu xác nhận không khớp!\"\r\n                                        )\r\n                                    );\r\n                                },\r\n                            }),\r\n                        ]}\r\n                    >\r\n                        <Input.Password placeholder=\"Nhập lại mật khẩu\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        wrapperCol={{\r\n                            offset: 8,\r\n                            span: 16,\r\n                        }}\r\n                    >\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Đăng ký\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Register;"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","getAnalytics","Register","navigate","useNavigate","dataRole","setDataRole","useState","loading","setLoading","useEffect","Id","Title","_jsx","_Fragment","children","_jsxs","className","Form","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","remember","autoComplete","onFinish","async","createUserWithEmailAndPassword","values","email","password","formattedBirthday","birthday","format","currentTime","dayjs","collectionName","role","docId","slice","cccd","lastModifiedBy","status","userData","fullName","sex","phone","address","createAt","updateAt","setDoc","doc","message","success","error","console","errorMessage","code","Item","label","rules","type","required","Input","placeholder","Radio","value","DatePicker","showTime","pattern","initialValue","length","undefined","Select","showSearch","optionFilterProp","filterOption","inputValue","option","_option$props$childre","props","toLowerCase","indexOf","map","items","Option","hasFeedback","min","Password","dependencies","_ref","getFieldValue","validator","_","Promise","reject","Error","resolve","offset","Button","htmlType"],"sourceRoot":""}